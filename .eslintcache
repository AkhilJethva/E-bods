[{"F:\\New folder\\log\\src\\index.js":"1","F:\\New folder\\log\\src\\App.js":"2","F:\\New folder\\log\\src\\reportWebVitals.js":"3","F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js":"4","F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js":"5","F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js":"6","F:\\New folder\\log\\src\\components\\layout\\Footer.js":"7","F:\\New folder\\log\\src\\components\\dashboard\\Home.js":"8","F:\\New folder\\log\\src\\components\\auth\\SignIn.js":"9","F:\\New folder\\log\\src\\components\\auth\\SignUp.js":"10","F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js":"11","F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js":"12","F:\\New folder\\log\\src\\store\\reducers\\authReducer.js":"13","F:\\New folder\\log\\src\\config\\fbconfig.js":"14","F:\\New folder\\log\\src\\store\\actions\\authAction.js":"15","F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js":"16","F:\\New folder\\log\\src\\helper\\PrivateRoute.js":"17","F:\\New folder\\log\\src\\components\\user\\UserRegister.js":"18","F:\\New folder\\log\\src\\store\\actions\\projectAction.js":"19","F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js":"20","F:\\New folder\\log\\src\\ethereum\\admin.js":"21","F:\\New folder\\log\\src\\ethereum\\web3.js":"22","F:\\New folder\\log\\src\\components\\admin\\ListComponent.js":"23","F:\\New folder\\log\\src\\ethereum\\approvers.js":"24","F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js":"25","F:\\New folder\\log\\src\\ethereum\\donationSystem.js":"26","F:\\New folder\\log\\src\\components\\user\\UserHome.js":"27","F:\\New folder\\log\\src\\components\\user\\UserLogin.js":"28","F:\\New folder\\log\\src\\ethereum\\user.js":"29","F:\\New folder\\log\\src\\components\\user\\UserRequest.js":"30","F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js":"31","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js":"32","F:\\New folder\\log\\src\\ethereum\\hospitals.js":"33","F:\\New folder\\log\\src\\ethereum\\hospital.js":"34","F:\\New folder\\log\\src\\components\\donation\\Donate.js":"35","F:\\New folder\\log\\src\\components\\donation\\DonationRequest.js":"36"},{"size":1317,"mtime":1612867536417,"results":"37","hashOfConfig":"38"},{"size":2259,"mtime":1617599237359,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":1439,"mtime":1615346812821,"results":"41","hashOfConfig":"38"},{"size":407,"mtime":1609475142179,"results":"42","hashOfConfig":"38"},{"size":841,"mtime":1617599259102,"results":"43","hashOfConfig":"38"},{"size":4723,"mtime":1615357930661,"results":"44","hashOfConfig":"38"},{"size":2235,"mtime":1613897820829,"results":"45","hashOfConfig":"38"},{"size":2190,"mtime":1617334000232,"results":"46","hashOfConfig":"38"},{"size":3277,"mtime":1617334050276,"results":"47","hashOfConfig":"38"},{"size":435,"mtime":1597725126514,"results":"48","hashOfConfig":"38"},{"size":442,"mtime":1613615673245,"results":"49","hashOfConfig":"38"},{"size":1073,"mtime":1612737497012,"results":"50","hashOfConfig":"38"},{"size":566,"mtime":1613614978664,"results":"51","hashOfConfig":"38"},{"size":1522,"mtime":1612758455797,"results":"52","hashOfConfig":"38"},{"size":6771,"mtime":1614048569690,"results":"53","hashOfConfig":"38"},{"size":751,"mtime":1613360757233,"results":"54","hashOfConfig":"38"},{"size":6128,"mtime":1614995467767,"results":"55","hashOfConfig":"38"},{"size":1070,"mtime":1613620769728,"results":"56","hashOfConfig":"38"},{"size":7442,"mtime":1614999839596,"results":"57","hashOfConfig":"38"},{"size":220,"mtime":1614998497804,"results":"58","hashOfConfig":"38"},{"size":486,"mtime":1613878816716,"results":"59","hashOfConfig":"38"},{"size":1682,"mtime":1614054806665,"results":"60","hashOfConfig":"38"},{"size":239,"mtime":1614053394656,"results":"61","hashOfConfig":"38"},{"size":3657,"mtime":1615346656282,"results":"62","hashOfConfig":"38"},{"size":266,"mtime":1617764480932,"results":"63","hashOfConfig":"38"},{"size":8918,"mtime":1617763355477,"results":"64","hashOfConfig":"38"},{"size":3566,"mtime":1615357545621,"results":"65","hashOfConfig":"38"},{"size":181,"mtime":1614832305164,"results":"66","hashOfConfig":"38"},{"size":637,"mtime":1614996688905,"results":"67","hashOfConfig":"38"},{"size":6544,"mtime":1615202381473,"results":"68","hashOfConfig":"38"},{"size":2498,"mtime":1617077328740,"results":"69","hashOfConfig":"38"},{"size":239,"mtime":1617076359923,"results":"70","hashOfConfig":"38"},{"size":193,"mtime":1615202550190,"results":"71","hashOfConfig":"38"},{"size":49397,"mtime":1617764669132,"results":"72","hashOfConfig":"38"},{"size":597,"mtime":1617687232917,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1nqew19",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\New folder\\log\\src\\index.js",[],["155","156"],"F:\\New folder\\log\\src\\App.js",[],"F:\\New folder\\log\\src\\reportWebVitals.js",[],["157","158"],"F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js",[],"F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js",[],"F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js",[],"F:\\New folder\\log\\src\\components\\layout\\Footer.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\Home.js",[],"F:\\New folder\\log\\src\\components\\auth\\SignIn.js",[],"F:\\New folder\\log\\src\\components\\auth\\SignUp.js",[],"F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\authReducer.js",[],"F:\\New folder\\log\\src\\config\\fbconfig.js",[],"F:\\New folder\\log\\src\\store\\actions\\authAction.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js",[],"F:\\New folder\\log\\src\\helper\\PrivateRoute.js",[],"F:\\New folder\\log\\src\\components\\user\\UserRegister.js",["159"],"import React, {Component} from 'react'\r\nimport { Button, Form, FormGroup, Label, Input,Spinner, Alert} from 'reactstrap';\r\nimport './UserRegister.css'\r\nimport web3 from '../../ethereum/web3'\r\nimport admin from '../../ethereum/admin';\r\nimport donationSystem from '../../ethereum/donationSystem'\r\n// import firebase from '../../config/fbconfig'\r\nimport { Link } from 'react-router-dom';\r\n\r\n    \r\nclass UserRegister extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email:\"\", aadhar:\"\",fullname:\"\",mobile:\"\",spin: false,errMsg:\"\",result:false};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const admins = await admin.methods.getAdmins().call({ from : accounts[0]});\r\n            const users = await donationSystem.methods.getDeployedUsers().call({from: accounts[0]})\r\n            console.log(\"Hello\",users)\r\n            \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        this.setState({errMsg:\"\"})\r\n        this.setState({spin: true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state)\r\n            await donationSystem.methods.createUserContact(this.state.fullname,this.state.email,this.state.aadhar,this.state.mobile).send({ from : accounts[0]});\r\n            const add = await donationSystem.methods.getUserContractAddress(this.state.email).call ({ from : accounts[0]});\r\n            console.log(\"my\",add)\r\n            this.setState({result:true})\r\n        }\r\n        catch(e){\r\n            this.setState({errMsg:e.message})\r\n        }\r\n        this.setState({spin: false})\r\n        \r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.adminInput)\r\n        return (\r\n            <div className=\"userRegister\">\r\n            <div className=\"userRegister__body\">\r\n                <h3>Register Your Self here :: </h3><br></br>\r\n                <Form onSubmit={this.handleSubmit} >\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name as on Addhar\" \r\n                            value={this.state.fullname} \r\n                            onChange={e => this.setState({fullname:e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\"\r\n                            value={this.state.email}\r\n                            placeholder=\"xyz@abc.com\" \r\n                            onChange={e => this.setState({email: e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"aadhar\">Aadhar No.</Label>\r\n                        <Input type=\"text\" name=\"aadhar\" id=\"aadhar\" placeholder=\"Your Aadhar no\"\r\n                            value={this.state.aadhar} \r\n                            onChange={e => this.setState({aadhar: e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"mobile\">Mobile No.</Label>\r\n                        <Input type=\"mobile\" name=\"mobile\" id=\"mobile\"\r\n                            placeholder=\"Your Mobile No.\" \r\n                            value={this.state.mobile}\r\n                            onChange={e => this.setState({mobile :e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                        <Label for=\"documents\">Documents</Label>\r\n                        <CustomInput type=\"file\"\r\n\r\n                            onChange={ handleDocChange}\r\n                            id=\"exampleCustomFileBrowser\" name=\"customFile\"  />\r\n                        <FormText color=\"muted\">\r\n                            This is some placeholder block-level help text for the above input.\r\n                            It's a bit lighter and easily wraps to a new line.\r\n                        </FormText>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                        <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\r\n                        Check me out\r\n                        </Label>\r\n                    </FormGroup> */}\r\n\r\n                    {\r\n                        !this.state.spin ?\r\n                            <Button className=\"userRegister__btn\" >Submit</Button>: \r\n                            <Spinner color=\"primary\" />\r\n                    }\r\n                    \r\n                    <div style={{marginTop: \"10px\"}}>\r\n                        {this.state.errMsg ? \r\n                            <Alert color=\"danger\">\r\n                                {this.state.errMsg.substr(0,50)}\r\n                            </Alert> : null\r\n                        }\r\n                    </div> \r\n                    <div style={{marginTop: \"10px\"}}>\r\n                        {this.state.result ? \r\n                            <Alert color=\"success\">\r\n                                You Have succesfully registered! <Link to=\"/userlogin\"> Click Here to Continue</Link>\r\n                            </Alert> : null\r\n                        }\r\n                    </div> \r\n                </Form>\r\n\r\n                <div className=\"userRegister__bottomLine\">Already Have an Acoount? <Link to=\"/userlogin\">click here</Link> </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default UserRegister","F:\\New folder\\log\\src\\store\\actions\\projectAction.js",[],"F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js",["160"],"import React, { Component } from 'react'\r\nimport { Container, Form, FormGroup, Input,Button,Col, Spinner, Label, Row,  Alert } from 'reactstrap';\r\nimport admin from '../../ethereum/admin';\r\nimport approver from '../../ethereum/approvers';\r\nimport web3 from '../../ethereum/web3'\r\nimport './AdminPanel.css'\r\nimport ListComponent from './ListComponent'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\nclass Adminpanel extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {admins: null, approvers:null, adminInput:\"Enter Admin Address\",approverInput:\"Enter Approver Address\",spin: false,spin2: false,errorMsg:\"\",errorMsg2:\"\"};\r\n        this.handleSubmitAdmin = this.handleSubmitAdmin.bind(this);\r\n        this.handleSubmitApprover = this.handleSubmitApprover.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const admins = await admin.methods.getAdmins().call({ from : accounts[0]});\r\n            \r\n            const approvers = await approver.methods.getAprrovers().call({ from : accounts[0]})\r\n            console.log(\"Hello\",approvers)\r\n            this.setState({admins,approvers})\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    async handleSubmitAdmin(e){\r\n        e.preventDefault();\r\n        this.setState({spin:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.adminInput)\r\n            await admin.methods.addAdmin(this.state.adminInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin:false, adminInput:\"\"})\r\n    }\r\n\r\n    async handleSubmitApprover(e){\r\n        e.preventDefault();\r\n        this.setState({spin2:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.approverInput)\r\n            await approver.methods.addApprover(this.state.approverInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg2: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin2:false, approverInput:\"\"})\r\n    }\r\n    \r\n    \r\n    render() {\r\n        // console.log(this.state.adminInput)\r\n        return (\r\n            <div className=\"adminPanel\">\r\n                <marquee scrollamount=\"10\"  className=\"adminPanel__marquee\"><h5>🙏🙏Operations On Ethereum block-chain take 15-30 seconds to complete. Please have some patience🙏🙏</h5></marquee>\r\n                <div className=\"adminPanel__header\"><hr></hr>\r\n                    <div className=\"adminPanel__headerTitle\">\r\n                        <h2>Welcome to Admin Panel </h2>\r\n                        <img alt=\"\" src=\"https://img.icons8.com/bubbles/100/000000/admin-settings-male.png\"/>\r\n                    </div>\r\n                    <Link to=\"/admin/hospitalhome\"><Button className=\"adminPanel__headerbtn\" color=\"danger\">Hospital Section</Button></Link>\r\n                <hr></hr></div>\r\n                <Container className=\"adminPanel__formConainer\">\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form  className=\"formConainer__form\" onSubmit={this.handleSubmitAdmin}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"adminAdd\" className=\"mr-sm-2 formConainer__label\">Admin Address</Label>\r\n                                <Input className=\"formConainer__input\" \r\n                                    value={this.state.adminInput}\r\n                                    onChange={(e) => this.setState({adminInput: e.target.value})}\r\n                                    type=\"text\" name=\"adminAdd\" id=\"adminAdd\" placeholder=\"Admin Address\" />\r\n                            </FormGroup>\r\n                            {\r\n                                !this.state.spin ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg}\r\n                            </Alert> : null\r\n                        }\r\n                        \r\n                    </Col></Row>\r\n                    <hr></hr>\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form className=\"formConainer__form\" onSubmit={this.handleSubmitApprover}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"approverAdd\" className=\"mr-sm-2 formConainer__label\">Approver Address</Label>\r\n                                <Input className=\"formConainer__input\"\r\n                                    value={this.state.approverInput}\r\n                                    onChange={(e) => this.setState({approverInput: e.target.value})}\r\n                                    type=\"text\" name=\"approverAdd\" id=\"approverAdd\" placeholder=\"Approver Address\" />\r\n                            </FormGroup> \r\n                            {\r\n                                !this.state.spin2 ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg2 ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg2}\r\n                            </Alert> : null\r\n                        }\r\n                    </Col></Row>\r\n                </Container>\r\n                <div className=\"adminPanel__listGroup\" >\r\n                    <div className=\"adminPanel__adminlist\">\r\n                        <div><h3>Admin's list</h3></div>\r\n                        {   this.state.admins ? \r\n                            this.state.admins.map((admin) =>(\r\n                                <ListComponent adminAdd={admin} flag={false} key={admin} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"adminPanel__approverslist\">\r\n                        <div><h3>Approver's list</h3></div>\r\n                        {   this.state.approvers ? \r\n                            this.state.approvers.map((approver) =>(\r\n                                <ListComponent approverAdd={approver} flag={true} key={approver} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Adminpanel\r\n","F:\\New folder\\log\\src\\ethereum\\admin.js",[],"F:\\New folder\\log\\src\\ethereum\\web3.js",[],"F:\\New folder\\log\\src\\components\\admin\\ListComponent.js",[],"F:\\New folder\\log\\src\\ethereum\\approvers.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js",[],"F:\\New folder\\log\\src\\ethereum\\donationSystem.js",[],"F:\\New folder\\log\\src\\components\\user\\UserHome.js",["161","162","163","164","165"],"import React,{useState,useEffect} from 'react'\r\nimport { Alert,Button, Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle, Form, UncontrolledCollapse,Col,   FormGroup, Label, Input, FormText, CustomInput, CardHeader   } from 'reactstrap'\r\nimport './UserHome.css'\r\nimport User from '../../ethereum/user'\r\nimport web3 from '../../ethereum/web3'\r\nimport UserRequest from './UserRequest'\r\nimport ubg from '../../Images/BackGround/ubg.jpg'\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport { connect } from 'react-redux'\r\nimport Firebase from '../../config/fbconfig';\r\n\r\n\r\nfunction UserHome(props) {\r\n\r\n    const [userAddress, setuserAddress] = useState(props.location.pathname.substr(10))\r\n    const [uname, setuname] = useState(\"\")\r\n    const {auth} = props;\r\n    const [HospitalList, setHospitalList] = useState(null)\r\n    const [USerRequestList, setUSerRequestsList] = useState(null)\r\n\r\n    useEffect(async() => {\r\n        \r\n        await window.ethereum.enable()\r\n        try{\r\n        const accounts = await web3.eth.getAccounts();\r\n        const user = User(userAddress);\r\n        const name = await user.methods.name().call({from: accounts[0]});\r\n        setuname(name)\r\n\r\n        const requestList= await user.methods.getRequests().call({from: accounts[0]});\r\n        setUSerRequestsList(requestList)\r\n\r\n        const hospitalsList = await hospitals.methods.getDeployedHospitals().call({ from : accounts[0]});\r\n        setHospitalList(hospitalsList);\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    console.log(\"Cool\",USerRequestList)\r\n    // code for new request form\r\n\r\n    const [title, settitle] = useState(\"\")\r\n\r\n    const [donationvalue, setdonationvalue] = useState(\"\")\r\n    const [hospitalAddress, sethospitalAddress] = useState(\"\")\r\n    const [userDocuments, setuserDocuments] = useState(null)\r\n\r\n\r\n    const onFileChange = event => {\r\n    \r\n        // Update the state\r\n        setuserDocuments(event.target.files[0])\r\n        \r\n    \r\n    };\r\n\r\n    const onRequestFormSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const user = User(userAddress);\r\n            await user.methods.createRequest(hospitalAddress,donationvalue,title,new Date()).send({from: accounts[0]});\r\n\r\n            const uploadTask = Firebase.storage().ref(`documents/${userDocuments.name}`).put(userDocuments);\r\n            console.log(uploadTask);\r\n            uploadTask.on('state_changed',\r\n            snapshot => { },\r\n            error => {\r\n                console.log(error);\r\n\r\n            },\r\n            () => {\r\n                Firebase.storage().ref(\"documents\")\r\n                    .child(userDocuments.name)\r\n                    .getDownloadURL()\r\n                    .then(url => { console.log(url); });\r\n            })\r\n\r\n\r\n            \r\n        }\r\n        catch(error){\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"userHome\">\r\n                <div className=\"userHome__upper\">\r\n                    <Alert className=\"upper__header\" color=\"info\">\r\n                        <Button className=\"upper__btnlft\" outline color=\"danger\" id=\"toggler\">Create FundRaiser</Button>\r\n                        \r\n                        <h4>{uname}'s Dashboard</h4>\r\n                        <Button className=\"upper__btnrgt\" outline color=\"danger\">AJ</Button>\r\n                    </Alert>\r\n                </div>\r\n                <div className=\"userHome__dialog\">\r\n                    <UncontrolledCollapse toggler=\"#toggler\">\r\n                        <Card>\r\n                            <CardHeader className=\"card__header\"><h3>Fund Raiser Form</h3></CardHeader>\r\n                            <CardBody>\r\n                                <Form className=\"request__form\">\r\n                                    <FormGroup row>\r\n                                        <Label for=\"title\" sm={2}>Title</Label>\r\n                                        <Col sm={10}>\r\n                                        <Input type=\"text\" value={title}\r\n                                            onChange={e => settitle(e.target.value)}\r\n                                            name=\"title\" id=\"title\" placeholder=\"Title for your fundraisers\" />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"Donation\" sm={2}>Donation</Label>\r\n                                        <Col sm={10}>\r\n                                        <Input type=\"number\"\r\n                                            value={donationvalue}\r\n                                            onChange={e => setdonationvalue(e.target.value)}\r\n                                            name=\"donation\" id=\"donation\" placeholder=\"Enter Donation Value\" />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"exampleSelect\" sm={2}>Select</Label>\r\n                                        <Col sm={10}>\r\n                                        <Input type=\"select\" \r\n                                            value={hospitalAddress}\r\n                                            onChange={e => sethospitalAddress(e.target.value)}\r\n                                            name=\"select\" id=\"exampleSelect\">\r\n                                            {\r\n                                                HospitalList? HospitalList.map(hospital =>(\r\n                                                    <option value={hospital}>Pqr</option>\r\n                                                )) : <option >NO Hospital Available</option>\r\n                                            }\r\n                                        </Input>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"exampleCustomFileBrowser\" sm={2}>File Browser with Custom Label</Label>\r\n                                        <Col sm={10}>\r\n                                        <CustomInput type=\"file\" \r\n                                            onChange={onFileChange}\r\n                                            id=\"exampleCustomFileBrowser\" name=\"customFile\" label=\"Yo, pick a file!\" />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup check row>\r\n                                        <Col sm={{ size: 10, offset: 2 }}>\r\n                                        <Button color=\"primary\" className=\"request__btn\" onClick={onRequestFormSubmit}>Submit</Button>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </UncontrolledCollapse>\r\n                </div>\r\n\r\n                <div className=\"userHome__bottom\">\r\n                    \r\n                        <div className=\"userHome__requestlist\">\r\n                            <CardHeader className=\"requestlist__header\"><h3>Your Request List</h3></CardHeader>\r\n                                <div className=\"requestList__overflow\">\r\n                                {\r\n                                    USerRequestList ? USerRequestList.map(requestAdd => (\r\n                                        <UserRequest key={requestAdd} requestAddress={requestAdd } />\r\n                                    )) : null\r\n                                }\r\n                                </div>\r\n                                \r\n                        </div>\r\n                    <div className=\"userHome__profile\">\r\n                        <Card className=\"profile___card\">\r\n                            <CardImg top className=\"profile__cardImg\" width=\"5%\" src={ubg} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{uname}</CardTitle>\r\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\r\n                            <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                            <Button>Button</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHome)\r\n","F:\\New folder\\log\\src\\components\\user\\UserLogin.js",["166","167","168","169"],"import React, {useState} from 'react'\r\nimport { Link,Redirect } from 'react-router-dom'\r\nimport { Form, FormGroup, Input, Label,Button, Alert } from 'reactstrap'\r\nimport donationSystem from '../../ethereum/donationSystem'\r\nimport web3 from '../../ethereum/web3'\r\nimport {connect} from 'react-redux'\r\nimport './UserLogin.css'\r\n\r\nfunction UserLogin(props) {\r\n    const [email, setemail] = useState(\"\")\r\n    const [userAdd, setuserAdd] = useState(\"\")\r\n    const [error, seterror] = useState(\"\")\r\n\r\n    \r\n    console.log(props.auth.email)\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        seterror(\"\")\r\n        await window.ethereum.enable()\r\n        try{\r\n            if(email != props.auth.email){\r\n                throw \"Please Enter the Same Email That you Registered With\";\r\n            }\r\n            const accounts = await web3.eth.getAccounts();\r\n            const add = await donationSystem.methods.getUserContractAddress(email).call ({ from : accounts[0]});\r\n            console.log(\"Result\",add)\r\n            \r\n            setuserAdd(add)\r\n            \r\n            \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            seterror(e)\r\n        }\r\n        setemail(\"\")\r\n    }\r\n\r\n    console.log(\"Come On\",userAdd )\r\n    if(userAdd){\r\n        if(userAdd !== '0x0000000000000000000000000000000000000000')\r\n        return(\r\n            <Redirect  to={`/userhome/${userAdd}`} />\r\n        )\r\n    }    \r\n    return(\r\n        <div className=\"userLogin\">\r\n                <div className=\"userLogin__left\">\r\n                    \r\n                    <Form className=\"userLogin__leftForm\"  >\r\n                        <div className=\"userlogin__head\"> \r\n                            <p><h3>Welcome!</h3><br></br>\r\n                            <h3>Enter to the Ethereum world Here</h3></p>\r\n                            <img src=\"https://img.icons8.com/color/144/000000/woody-woodpecker.png\"/>\r\n                        </div>\r\n                            <FormGroup>\r\n                                <Label for=\"email\"><h5>Email :</h5></Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your Email That You Registered with\" \r\n                                    value={email}\r\n                                    onChange={event => {setemail(event.target.value)}}\r\n                                    required\r\n                                    />\r\n                            </FormGroup>\r\n                            {\r\n                                error ? \r\n                                <Alert color=\"danger\">{error}</Alert> : null\r\n                            }\r\n                            <Button onClick={handleSubmit} className=\"userLogin__leftbtn\" color=\"primary\" >Login</Button>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"userLogin__line\"></div>\r\n                <div className=\"userLogin__right\">\r\n                    <img className=\"userLogin__rightImg\" src=\"https://img.icons8.com/color/144/000000/optin-monster.png\"/>\r\n                    <h3>Hola! Welcome to E-BODs family.</h3>\r\n                    <h4>Are you new Here? Don't worry we got you back.🤩</h4>\r\n                    <Link to=\"/userRegister\"><Button className=\"userLogin__rightbtn\"  color=\"success\">Click Me</Button></Link> \r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserLogin)\r\n","F:\\New folder\\log\\src\\ethereum\\user.js",["170"],"import web3 from './web3'\r\nimport User from './build/User.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        User.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\user\\UserRequest.js",[],"F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js",["171","172","173"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Col, Container, Form, FormGroup, Input, Label, Button, UncontrolledCollapse, Card, CardBody, CardHeader, Row, CardTitle } from 'reactstrap'\r\nimport HospitalCom from './HospitalCom'\r\nimport './HospitalHome.css'\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport web3 from '../../ethereum/web3'\r\n\r\nfunction HospitalHome() {\r\n\r\n    const [Hname, setHname] = useState(\"\")\r\n    const [Hmail, setHmail] = useState(\"\")\r\n    const [HacAdrress, setHacAdrress] = useState(\"\")\r\n    const [Hlocation, setHlocation] = useState(\"\")\r\n    const [Hnumber, setHnumber] = useState(\"\")\r\n    const [HospitalList, setHospitalList] = useState(null)\r\n\r\n\r\n    const HandleHospitalSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        console.log(HacAdrress,Hname,Hmail,Hlocation,Hnumber);\r\n        const accounts = await web3.eth.getAccounts();\r\n        await hospitals.methods.createHospitalContract(HacAdrress,Hname,Hmail,Hlocation,Hnumber).send({ from : accounts[0]});\r\n\r\n    }\r\n\r\n    useEffect(async() => {\r\n\r\n        await window.ethereum.enable();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const hospitalsList = await hospitals.methods.getDeployedHospitals().call({ from : accounts[0]});\r\n            setHospitalList(hospitalsList);\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [HospitalList])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"hopitalHome\">\r\n            <div className=\"hospitalHome__header\">\r\n                <hr></hr>\r\n                        <h2>Welcome to Hospital Section </h2>\r\n                        <img src=\"https://img.icons8.com/plasticine/100/000000/hospital-room.png\"/>\r\n                <hr></hr>\r\n            </div>\r\n            <Container className=\"hopitalHome__formConainer\">\r\n                \r\n                <Button className=\"formtoggle__btn\" color=\"primary\" id=\"toggler\" >\r\n                    Add New Hospital\r\n                </Button>\r\n                <UncontrolledCollapse toggler=\"#toggler\">\r\n                    <Card>\r\n                        <CardHeader tag=\"h3\">New Hospital Form</CardHeader>\r\n                        <CardBody>\r\n                            <Form>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hname\" sm={2}>Hospital name</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hname\" id=\"Hname\"\r\n                                        value={Hname}\r\n                                        onChange={event => setHname(event.target.value)}\r\n                                        placeholder=\"Hospital name\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Email\" sm={2}>Hospital Email</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"email\" name=\"Email\" id=\"Email\"\r\n                                        value={Hmail}\r\n                                        onChange={event => setHmail(event.target.value)}\r\n                                        placeholder=\"Email\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"AccAddress\" sm={2}>Hospital Account Address</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"AccAddress\" id=\"AccAddress\" \r\n                                        value={HacAdrress}\r\n                                        onChange={event => setHacAdrress(event.target.value)}\r\n                                        placeholder=\"Hospital Account Address\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hlocation\" sm={2}>Hospital Location</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input autoFocus type=\"select\" name=\"Hlocation\"\r\n                                        value={Hlocation}\r\n                                        onChange={event => setHlocation(event.target.value)}\r\n                                        id=\"Hlocation\">\r\n                                        <option>Mumbai</option>\r\n                                        <option>Pune</option>\r\n                                        <option>Ahmedabad</option>\r\n                                        <option>Bengaluru </option>\r\n                                        <option>Chennai</option>\r\n                                    </Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hnumber\" sm={2}>Hospital's contact No.</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hnumber\" id=\"Hnumber\"\r\n                                        value={Hnumber}\r\n                                        onChange={event => setHnumber(event.target.value)}\r\n                                        placeholder=\"Hospital's contact No.\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <Button color=\"success\" onClick={HandleHospitalSubmit}>Add Hospital</Button>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </UncontrolledCollapse>\r\n            </Container>\r\n\r\n            <div className=\"hospitalHome__hlist\">\r\n                <hr></hr>\r\n                <h3>Hospital list</h3>\r\n                <hr></hr>\r\n                <Row>\r\n\r\n                        {   HospitalList ? \r\n                            HospitalList.map((hospital) =>(\r\n                                <HospitalCom key={hospital} Haddress={hospital} />\r\n                            )) : null\r\n                        }\r\n                    {/* <HospitalCom />\r\n                    <HospitalCom />\r\n                    <HospitalCom /> */}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HospitalHome\r\n","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js",["174","175"],"F:\\New folder\\log\\src\\ethereum\\hospitals.js",[],"F:\\New folder\\log\\src\\ethereum\\hospital.js",["176"],"import web3 from './web3'\r\nimport Hospital from './build/Hospital.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        Hospital.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\donation\\Donate.js",["177","178"],"F:\\New folder\\log\\src\\components\\donation\\DonationRequest.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":23,"column":19,"nodeType":"187","messageId":"188","endLine":23,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":77,"column":17,"nodeType":"191","endLine":77,"endColumn":77},{"ruleId":"185","severity":1,"message":"192","line":2,"column":143,"nodeType":"187","messageId":"188","endLine":2,"endColumn":151},{"ruleId":"185","severity":1,"message":"193","line":15,"column":25,"nodeType":"187","messageId":"188","endLine":15,"endColumn":39},{"ruleId":"185","severity":1,"message":"194","line":17,"column":12,"nodeType":"187","messageId":"188","endLine":17,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":21,"column":15,"nodeType":"197","endLine":43,"endColumn":6},{"ruleId":"195","severity":1,"message":"198","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":21,"column":22,"nodeType":"203","messageId":"204","endLine":21,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":22,"column":17,"nodeType":"207","messageId":"208","endLine":22,"endColumn":78},{"ruleId":"209","severity":1,"message":"210","line":54,"column":29,"nodeType":"191","endLine":54,"endColumn":102},{"ruleId":"209","severity":1,"message":"210","line":73,"column":21,"nodeType":"191","endLine":73,"endColumn":123},{"ruleId":"211","severity":1,"message":"212","line":4,"column":1,"nodeType":"213","endLine":9,"endColumn":3},{"ruleId":"185","severity":1,"message":"214","line":3,"column":120,"nodeType":"187","messageId":"188","endLine":3,"endColumn":129},{"ruleId":"195","severity":1,"message":"196","line":27,"column":15,"nodeType":"197","endLine":42,"endColumn":6},{"ruleId":"209","severity":1,"message":"210","line":52,"column":25,"nodeType":"191","endLine":52,"endColumn":100},{"ruleId":"195","severity":1,"message":"196","line":17,"column":16,"nodeType":"197","endLine":40,"endColumn":6},{"ruleId":"195","severity":1,"message":"215","line":40,"column":8,"nodeType":"199","endLine":40,"endColumn":10,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"212","line":4,"column":1,"nodeType":"213","endLine":9,"endColumn":3},{"ruleId":"185","severity":1,"message":"217","line":34,"column":12,"nodeType":"187","messageId":"188","endLine":34,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":36,"column":15,"nodeType":"197","endLine":52,"endColumn":6},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],["218"],["219"],"no-unused-vars","'admins' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","'FormText' is defined but never used.","'setuserAddress' is assigned a value but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userAddress'. Either include it or remove the dependency array.","ArrayExpression",["220"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CardTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'Haddress'. Either include it or remove the dependency array.",["221"],"'deployesUserList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [userAddress]",{"range":"226","text":"227"},"Update the dependencies array to be: [Haddress]",{"range":"228","text":"229"},[1582,1584],"[userAddress]",[1419,1421],"[Haddress]"]