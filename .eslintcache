[{"F:\\New folder\\log\\src\\index.js":"1","F:\\New folder\\log\\src\\App.js":"2","F:\\New folder\\log\\src\\reportWebVitals.js":"3","F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js":"4","F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js":"5","F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js":"6","F:\\New folder\\log\\src\\components\\layout\\Footer.js":"7","F:\\New folder\\log\\src\\components\\dashboard\\Home.js":"8","F:\\New folder\\log\\src\\components\\auth\\SignIn.js":"9","F:\\New folder\\log\\src\\components\\auth\\SignUp.js":"10","F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js":"11","F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js":"12","F:\\New folder\\log\\src\\store\\reducers\\authReducer.js":"13","F:\\New folder\\log\\src\\config\\fbconfig.js":"14","F:\\New folder\\log\\src\\store\\actions\\authAction.js":"15","F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js":"16","F:\\New folder\\log\\src\\helper\\PrivateRoute.js":"17","F:\\New folder\\log\\src\\components\\user\\UserRegister.js":"18","F:\\New folder\\log\\src\\store\\actions\\projectAction.js":"19","F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js":"20","F:\\New folder\\log\\src\\ethereum\\admin.js":"21","F:\\New folder\\log\\src\\ethereum\\web3.js":"22","F:\\New folder\\log\\src\\components\\admin\\ListComponent.js":"23","F:\\New folder\\log\\src\\ethereum\\approvers.js":"24","F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js":"25","F:\\New folder\\log\\src\\ethereum\\donationSystem.js":"26","F:\\New folder\\log\\src\\components\\user\\UserHome.js":"27","F:\\New folder\\log\\src\\components\\user\\UserLogin.js":"28","F:\\New folder\\log\\src\\ethereum\\user.js":"29","F:\\New folder\\log\\src\\components\\user\\UserRequest.js":"30","F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js":"31","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js":"32","F:\\New folder\\log\\src\\ethereum\\hospitals.js":"33","F:\\New folder\\log\\src\\ethereum\\hospital.js":"34","F:\\New folder\\log\\src\\components\\donation\\Donate.js":"35","F:\\New folder\\log\\src\\components\\donation\\DonationRequest.js":"36","F:\\New folder\\log\\src\\ethereum\\request.js":"37","F:\\New folder\\log\\src\\components\\donation\\RequestDetail.js":"38","F:\\New folder\\log\\src\\components\\admin\\UserRequestSec.js":"39"},{"size":1317,"mtime":1612867536417,"results":"40","hashOfConfig":"41"},{"size":2696,"mtime":1618397878595,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":1560,"mtime":1618291271845,"results":"44","hashOfConfig":"41"},{"size":407,"mtime":1609475142179,"results":"45","hashOfConfig":"41"},{"size":2247,"mtime":1618291305475,"results":"46","hashOfConfig":"41"},{"size":4723,"mtime":1615357930661,"results":"47","hashOfConfig":"41"},{"size":2417,"mtime":1618715599717,"results":"48","hashOfConfig":"41"},{"size":2719,"mtime":1618547361125,"results":"49","hashOfConfig":"41"},{"size":3778,"mtime":1618370731798,"results":"50","hashOfConfig":"41"},{"size":435,"mtime":1597725126514,"results":"51","hashOfConfig":"41"},{"size":442,"mtime":1613615673245,"results":"52","hashOfConfig":"41"},{"size":1073,"mtime":1612737497012,"results":"53","hashOfConfig":"41"},{"size":566,"mtime":1613614978664,"results":"54","hashOfConfig":"41"},{"size":1522,"mtime":1612758455797,"results":"55","hashOfConfig":"41"},{"size":6825,"mtime":1618285066889,"results":"56","hashOfConfig":"41"},{"size":751,"mtime":1613360757233,"results":"57","hashOfConfig":"41"},{"size":6131,"mtime":1618549935428,"results":"58","hashOfConfig":"41"},{"size":1070,"mtime":1613620769728,"results":"59","hashOfConfig":"41"},{"size":7553,"mtime":1618204361171,"results":"60","hashOfConfig":"41"},{"size":220,"mtime":1614998497804,"results":"61","hashOfConfig":"41"},{"size":486,"mtime":1613878816716,"results":"62","hashOfConfig":"41"},{"size":1682,"mtime":1614054806665,"results":"63","hashOfConfig":"41"},{"size":239,"mtime":1614053394656,"results":"64","hashOfConfig":"41"},{"size":4267,"mtime":1618044974450,"results":"65","hashOfConfig":"41"},{"size":266,"mtime":1617938553164,"results":"66","hashOfConfig":"41"},{"size":12388,"mtime":1618549188975,"results":"67","hashOfConfig":"41"},{"size":3567,"mtime":1618549685758,"results":"68","hashOfConfig":"41"},{"size":181,"mtime":1614832305164,"results":"69","hashOfConfig":"41"},{"size":1795,"mtime":1618549832859,"results":"70","hashOfConfig":"41"},{"size":6934,"mtime":1618024970835,"results":"71","hashOfConfig":"41"},{"size":2686,"mtime":1618023438976,"results":"72","hashOfConfig":"41"},{"size":239,"mtime":1617857562589,"results":"73","hashOfConfig":"41"},{"size":193,"mtime":1615202550190,"results":"74","hashOfConfig":"41"},{"size":49909,"mtime":1618716749991,"results":"75","hashOfConfig":"41"},{"size":1588,"mtime":1617944552325,"results":"76","hashOfConfig":"41"},{"size":190,"mtime":1617943331382,"results":"77","hashOfConfig":"41"},{"size":7188,"mtime":1618719759938,"results":"78","hashOfConfig":"41"},{"size":10609,"mtime":1618279640434,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1nqew19",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},"F:\\New folder\\log\\src\\index.js",[],["174","175"],"F:\\New folder\\log\\src\\App.js",[],"F:\\New folder\\log\\src\\reportWebVitals.js",[],["176","177"],"F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js",["178","179","180","181","182"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport {  Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink } from 'reactstrap';\r\nimport  './Navbar.css'\r\nimport SignInLinks from './SignInLinks';\r\nimport SignoutLinks from './SignoutLinks';\r\nimport { connect } from 'react-redux'\r\nimport firebase from '../../config/fbconfig'\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction NavbarLayout(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const {auth} =  props;\r\n\r\n\r\n    const [Admins, setAdmins] = useState(null)\r\n    \r\n    return (\r\n        <div className=\"navbar fluid\">\r\n            <Navbar dark  expand=\"md\">\r\n                <NavbarBrand href=\"/home\">E-BODS</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"/aboutus\">About Us</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/contactus\">Contact Us</NavLink>\r\n                    </NavItem>\r\n\r\n                </Nav>\r\n\r\n                {auth.uid? <SignInLinks /> : <SignoutLinks /> }\r\n                \r\n                \r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarLayout)\r\n","F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js",[],"F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js",["183","184","185"],"import React,{useState,useEffect} from 'react'\r\nimport {Nav,NavItem,NavLink} from 'reactstrap'\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authAction\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport firebase from '../../config/fbconfig'\r\n\r\nfunction SignInLinks(props) {\r\n    const {auth} =  props;\r\n    const [flagAdminJump, setflagAdminJump] = useState(null)\r\n    const logout = () => {\r\n        props.signOut()\r\n    }\r\n\r\n    useEffect(async() => {\r\n    \r\n        var docRef = firebase.firestore().collection(`Admins`).doc(`${auth.email}`);\r\n    \r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                // console.log(\"Document data:\", doc.data());\r\n                // setData(doc.data())\r\n                setflagAdminJump(doc.data())\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    \r\n        \r\n        \r\n    \r\n    return () => {\r\n    \r\n    }\r\n    }, [auth])\r\n\r\n    \r\n    if(auth.uid  && flagAdminJump !== null && flagAdminJump.Value == 0)\r\n    {\r\n        return (\r\n            <Nav navbar>\r\n                <NavItem>\r\n                    <NavLink href=\"/adminpanel\">AdminPanel</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink  onClick={logout}>Log Out</NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Nav navbar>\r\n            <NavItem>\r\n                <NavLink href=\"/donate\">Donate</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink href=\"/userlogin\">User Section</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink  onClick={logout}>Log Out</NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInLinks)\r\n","F:\\New folder\\log\\src\\components\\layout\\Footer.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\Home.js",["186"],"F:\\New folder\\log\\src\\components\\auth\\SignIn.js",["187","188"],"import React,{useState,useEffect} from 'react'\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport './SignIn.css'\r\nimport {connect} from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport firebase from '../../config/fbconfig'\r\n\r\nimport Lottie from 'react-lottie';\r\nimport A1 from '../../animations/50124-user-profile.json'\r\n\r\n\r\nfunction SignIn(props) {\r\n\r\n  const [email, setemail] = useState(\"\")\r\n  const [password, setpassword] = useState(\"\")\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: A1,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleLogin = (event) => {\r\n      event.preventDefault();\r\n      props.signIn({email,password});\r\n      setemail(\"\")\r\n      setpassword(\"\")\r\n      \r\n      \r\n  }\r\n  const {authError,auth} = props\r\n  if(auth.uid){\r\n    console.log(\"kuch to huva\")\r\n    \r\n  }\r\n  \r\n  \r\n  console.log(\"hello I am auth\",auth.email)\r\n\r\n  if(auth.uid) return <Redirect  to=\"/home\"/>\r\n\r\n  return (\r\n    <div className=\"signin\">\r\n            <div className=\"signIN__anim\" ><Lottie \r\n                  options={defaultOptions}\r\n                  height={201}\r\n                  width={200}\r\n                /></div>\r\n      <div className=\"signin__body\">\r\n        <h3>LogIn Here</h3><br></br>\r\n        <Form onSubmit={handleLogin}>\r\n            <FormGroup>\r\n              <Label for=\"exampleEmail\">Email</Label>\r\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" \r\n                value={email}\r\n                placeholder=\"xyz@abc.com\" \r\n                onChange={e => setemail(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"examplePassword\">Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\"\r\n                placeholder=\"password must contain 8 characters\" \r\n                value={password}\r\n                onChange={e => setpassword(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            <Button className=\"signin__btn\" disabled={email? password ? false:true : true}>Submit</Button>\r\n            <div>\r\n                {authError ? <p>{authError}</p> : null}\r\n            </div>          \r\n          </Form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError : state.auth.authError,\r\n    auth : state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","F:\\New folder\\log\\src\\components\\auth\\SignUp.js",[],"F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\authReducer.js",[],"F:\\New folder\\log\\src\\config\\fbconfig.js",[],"F:\\New folder\\log\\src\\store\\actions\\authAction.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js",[],"F:\\New folder\\log\\src\\helper\\PrivateRoute.js",[],"F:\\New folder\\log\\src\\components\\user\\UserRegister.js",["189"],"F:\\New folder\\log\\src\\store\\actions\\projectAction.js",[],"F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js",["190"],"import React, { Component } from 'react'\r\nimport { Container, Form, FormGroup, Input,Button,Col, Spinner, Label, Row,  Alert } from 'reactstrap';\r\nimport admin from '../../ethereum/admin';\r\nimport approver from '../../ethereum/approvers';\r\nimport web3 from '../../ethereum/web3'\r\nimport './AdminPanel.css'\r\nimport ListComponent from './ListComponent'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\nclass Adminpanel extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {admins: null, approvers:null, adminInput:\"Enter Admin Address\",approverInput:\"Enter Approver Address\",spin: false,spin2: false,errorMsg:\"\",errorMsg2:\"\"};\r\n        this.handleSubmitAdmin = this.handleSubmitAdmin.bind(this);\r\n        this.handleSubmitApprover = this.handleSubmitApprover.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const admins = await admin.methods.getAdmins().call({ from : accounts[0]});\r\n            \r\n            const approvers = await approver.methods.getAprrovers().call({ from : accounts[0]})\r\n            console.log(\"Hello\",approvers)\r\n            this.setState({admins,approvers})\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    async handleSubmitAdmin(e){\r\n        e.preventDefault();\r\n        this.setState({spin:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.adminInput)\r\n            await admin.methods.addAdmin(this.state.adminInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin:false, adminInput:\"\"})\r\n    }\r\n\r\n    async handleSubmitApprover(e){\r\n        e.preventDefault();\r\n        this.setState({spin2:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.approverInput)\r\n            await approver.methods.addApprover(this.state.approverInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg2: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin2:false, approverInput:\"\"})\r\n    }\r\n    \r\n    \r\n    render() {\r\n        // console.log(this.state.adminInput)\r\n        return (\r\n            <div className=\"adminPanel\">\r\n                <marquee scrollamount=\"10\"  className=\"adminPanel__marquee\"><h5>🙏🙏Operations On Ethereum block-chain take 15-30 seconds to complete. Please have some patience🙏🙏</h5></marquee>\r\n                <div className=\"adminPanel__header\"><hr></hr>\r\n                <Link to=\"/admin/userRequestSec\"><Button color=\"success\">User Request Section</Button></Link>\r\n                    <div className=\"adminPanel__headerTitle\">\r\n                        <h2>Welcome to Admin Panel </h2>\r\n                        <img alt=\"\" src=\"https://img.icons8.com/bubbles/100/000000/admin-settings-male.png\"/>\r\n                    </div>\r\n                    <Link to=\"/admin/hospitalhome\"><Button className=\"adminPanel__headerbtn\" color=\"danger\">Hospital Section</Button></Link>\r\n                <hr></hr></div>\r\n                <Container className=\"adminPanel__formConainer\">\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form  className=\"formConainer__form\" onSubmit={this.handleSubmitAdmin}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"adminAdd\" className=\"mr-sm-2 formConainer__label\">Admin Address</Label>\r\n                                <Input className=\"formConainer__input\" \r\n                                    value={this.state.adminInput}\r\n                                    onChange={(e) => this.setState({adminInput: e.target.value})}\r\n                                    type=\"text\" name=\"adminAdd\" id=\"adminAdd\" placeholder=\"Admin Address\" />\r\n                            </FormGroup>\r\n                            {\r\n                                !this.state.spin ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg}\r\n                            </Alert> : null\r\n                        }\r\n                        \r\n                    </Col></Row>\r\n                    <hr></hr>\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form className=\"formConainer__form\" onSubmit={this.handleSubmitApprover}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"approverAdd\" className=\"mr-sm-2 formConainer__label\">Approver Address</Label>\r\n                                <Input className=\"formConainer__input\"\r\n                                    value={this.state.approverInput}\r\n                                    onChange={(e) => this.setState({approverInput: e.target.value})}\r\n                                    type=\"text\" name=\"approverAdd\" id=\"approverAdd\" placeholder=\"Approver Address\" />\r\n                            </FormGroup> \r\n                            {\r\n                                !this.state.spin2 ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg2 ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg2}\r\n                            </Alert> : null\r\n                        }\r\n                    </Col></Row>\r\n                </Container>\r\n                <div className=\"adminPanel__listGroup\" >\r\n                    <div className=\"adminPanel__adminlist\">\r\n                        <div><h3>Admin's list</h3></div>\r\n                        {   this.state.admins ? \r\n                            this.state.admins.map((admin) =>(\r\n                                <ListComponent adminAdd={admin} flag={false} key={admin} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"adminPanel__approverslist\">\r\n                        <div><h3>Approver's list</h3></div>\r\n                        {   this.state.approvers ? \r\n                            this.state.approvers.map((approver) =>(\r\n                                <ListComponent approverAdd={approver} flag={true} key={approver} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Adminpanel\r\n","F:\\New folder\\log\\src\\ethereum\\admin.js",[],"F:\\New folder\\log\\src\\ethereum\\web3.js",[],"F:\\New folder\\log\\src\\components\\admin\\ListComponent.js",[],"F:\\New folder\\log\\src\\ethereum\\approvers.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js",[],"F:\\New folder\\log\\src\\ethereum\\donationSystem.js",[],"F:\\New folder\\log\\src\\components\\user\\UserHome.js",["191","192","193","194","195"],"import React,{useState,useEffect} from 'react'\r\nimport { Alert,Button, Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle, Form, UncontrolledCollapse,Col,   FormGroup, Label, Input, FormText, CustomInput, CardHeader, Badge   } from 'reactstrap'\r\nimport './UserHome.css'\r\nimport User from '../../ethereum/user'\r\nimport web3 from '../../ethereum/web3'\r\nimport UserRequest from './UserRequest'\r\nimport ubg from '../../Images/BackGround/ubg.jpg'\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport { connect } from 'react-redux'\r\nimport Firebase from '../../config/fbconfig';\r\nimport Hospital from '../../ethereum/hospital';\r\nimport Lottie from 'react-lottie';\r\nimport Spin from '../../animations/46472-lurking-cat.json'\r\nimport { useParams } from 'react-router'\r\n\r\n\r\nfunction UserHome(props) {\r\n    let {id} = useParams();\r\n    const [userAddress, setuserAddress] = useState(id)\r\n    const [uname, setuname] = useState(\"\")\r\n    const {auth} = props;\r\n    const [HospitalList, setHospitalList] = useState([])\r\n    const [USerRequestList, setUSerRequestsList] = useState(null)\r\n    const [HospitalFirebase, setHospitalFirebase] = useState(null)\r\n    const [Spinner, setSpinner] = useState(false)\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: Spin,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    useEffect(async() => {\r\n        \r\n        await window.ethereum.enable()\r\n        try{\r\n        const accounts = await web3.eth.getAccounts();\r\n        const user = User(userAddress);\r\n        const name = await user.methods.name().call({from: accounts[0]});\r\n        setuname(name)\r\n\r\n        const requestList= await user.methods.getRequests().call({from: accounts[0]});\r\n        setUSerRequestsList(requestList)\r\n        console.log(await hospitals.methods)\r\n        const hospitalsList = await hospitals.methods.getDeployedHospitals().call({ from : accounts[0]});\r\n\r\n        let hospitalColl = [];\r\n\r\n        hospitalsList.map(async(hospitalAdd) => {\r\n            const hospital = Hospital(hospitalAdd);\r\n            const ownAdd = await hospital.methods.ownerAddress().call({ from : accounts[0]});\r\n            console.log(\"Show This\",ownAdd)\r\n            hospitalColl.push(ownAdd)\r\n        })\r\n        console.log(\"Try\",hospitalColl)\r\n        setHospitalList(hospitalColl);\r\n        \r\n        //Get Hospital Data From Firebase\r\n\r\n            const markers = [];\r\n            await Firebase.firestore().collection('Hospitals').get()\r\n                    .then(querySnapshot => {\r\n                    querySnapshot.docs.forEach(doc => {\r\n                    markers.push(doc.data());\r\n                    });\r\n                });\r\n            console.log(\"Hospital List from Fb\",markers)\r\n            setHospitalFirebase(markers)\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    console.log(\"Cool\",USerRequestList)\r\n    // code for new request form\r\n    console.log(\"list Hello\",HospitalList)\r\n    const [title, settitle] = useState(\"\")\r\n\r\n    const [donationvalue, setdonationvalue] = useState(\"\")\r\n    const [hospitalAddress, sethospitalAddress] = useState(\"\")\r\n    const [userDocuments, setuserDocuments] = useState(null)\r\n\r\n\r\n    const onFileChange = event => {\r\n    \r\n        // Update the state\r\n        setuserDocuments(event.target.files[0])\r\n        \r\n    \r\n    };\r\n\r\n    const onRequestFormSubmit = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        setSpinner(true)\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const user = User(userAddress);\r\n            await user.methods.createRequest(hospitalAddress,donationvalue,title,new Date()).send({from: accounts[0]});\r\n            console.log(\"Step 1\")\r\n            const requestAdd = await user.methods.getLastAddedRequest().call({from: accounts[0]})\r\n                console.log(await user.methods)\r\n                    console.log(\"Our ID\",requestAdd)\r\n                    const uploadTask = Firebase.storage().ref(`documents/${userDocuments.name}`).put(userDocuments);\r\n                    console.log(uploadTask);\r\n                    uploadTask.on('state_changed',\r\n                    snapshot => { },\r\n                    error => {\r\n                        console.log(error);\r\n\r\n                    },\r\n                    () => {\r\n                        console.log(\"Step 2\")\r\n                        Firebase.storage().ref(\"documents\")\r\n                            .child(userDocuments.name)\r\n                            .getDownloadURL()\r\n                            .then(url => { \r\n                                console.log(url);\r\n\r\n\r\n                                Firebase.firestore().collection(`User`).doc(`${requestAdd}`).set({\r\n                                    hospitalAddress: hospitalAddress,\r\n                                    DonationValue: donationvalue,\r\n                                    Title : title,\r\n                                    Time : new Date(),\r\n                                    DocumentUrl : url\r\n                                });\r\n                                console.log(\"Data Stored\")\r\n                            });\r\n                    })\r\n\r\n                    console.log(\"Step 3\")\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n            setSpinner(false)\r\n        }\r\n        setSpinner(false)\r\n        settitle(\"\")\r\n        setdonationvalue(\"\")\r\n        sethospitalAddress(\"\")\r\n        setuserDocuments(null)\r\n    }\r\n    console.log(\"list Hello last\",HospitalList)\r\n    return (\r\n            <div className=\"userHome\">\r\n                <div className=\"userHome__upper\">\r\n                    <Alert className=\"upper__header\" color=\"info\">\r\n                        <Button className=\"upper__btnlft\" outline color=\"danger\" id=\"toggler\">Create FundRaiser</Button>\r\n                        \r\n                        <h4>{uname}'s Dashboard</h4>\r\n                        <Button className=\"upper__btnrgt\" outline color=\"danger\">AJ</Button>\r\n                    </Alert>\r\n                    \r\n                </div>\r\n                <div className=\"userHome__dialog\">\r\n                    <UncontrolledCollapse toggler=\"#toggler\">\r\n                        <Card>\r\n                            <CardHeader className=\"card__header\"><h3>Fund Raiser Form</h3></CardHeader>\r\n                            <CardBody>\r\n                                <Form className=\"request__form\">\r\n                                    <FormGroup row>\r\n                                        <Label for=\"title\" sm={2}>Title</Label>\r\n                                        <Col sm={10}>\r\n                                        <Input type=\"text\" value={title}\r\n                                            onChange={e => settitle(e.target.value)}\r\n                                            name=\"title\" id=\"title\" placeholder=\"Title for your fundraisers\" />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"Donation\" sm={2}>Donation</Label>\r\n                                        <Col sm={10} style={{display: \"flex\",alignItems: \"center\"}}>\r\n                                        <Input type=\"number\"\r\n                                            value={donationvalue}\r\n                                            onChange={e => setdonationvalue(e.target.value)}\r\n                                            name=\"donation\" id=\"donation\" placeholder=\"Enter Donation Value\" />\r\n                                            <h2><Badge color=\"warning\">Ethere</Badge></h2>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"exampleSelect\" sm={2}>Select</Label>\r\n                                        <Col sm={10}>\r\n                                        <Input type=\"select\" \r\n                                            value={hospitalAddress}\r\n                                            onChange={e => sethospitalAddress(e.target.value)}\r\n                                            name=\"select\" id=\"exampleSelect\">\r\n                                            \r\n                                            { HospitalFirebase ? HospitalFirebase.map(hospital => (\r\n                                                    <option value={hospital.hospitalAddress} >\r\n                                                        {hospital.HospitalName}\r\n                                                    </option>\r\n                                                )) : <option >NO Hospital Available</option> }\r\n                                            \r\n                                        </Input>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label for=\"exampleCustomFileBrowser\" sm={2}>File Browser with Custom Label</Label>\r\n                                        <Col sm={10}>\r\n                                        <CustomInput type=\"file\" \r\n                                            onChange={onFileChange}\r\n                                            id=\"exampleCustomFileBrowser\" name=\"customFile\" label=\"Yo, pick a file!\" />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup check row>\r\n                                        <Col sm={{ size: 10, offset: 2 }}>\r\n                                        \r\n                                        \r\n                                        {  !Spinner ? <Button color=\"primary\" className=\"request__btn\" onClick={onRequestFormSubmit}>Submit</Button>\r\n                                        :\r\n                                            <Lottie \r\n                                                options={defaultOptions}\r\n                                                height={100}\r\n                                                width={100}\r\n                                        />}\r\n                                        \r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </UncontrolledCollapse>\r\n                </div>\r\n\r\n                <div className=\"userHome__bottom\">\r\n                        <div className=\"userHome__requestlist\">\r\n                            <CardHeader className=\"requestlist__header\"><h3>Your Request List</h3></CardHeader>\r\n                                <div className=\"requestList__overflow\">\r\n                                {\r\n                                    USerRequestList ? USerRequestList.map(requestAdd => (\r\n                                        <UserRequest key={requestAdd} requestAddress={requestAdd } />\r\n                                    )) : null\r\n                                }\r\n                                </div>\r\n                                \r\n                        </div>\r\n                    <div className=\"userHome__profile\">\r\n                        <Card className=\"profile___card\">\r\n                            <CardImg top className=\"profile__cardImg\" width=\"5%\" src={ubg} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                            <CardTitle tag=\"h5\">{uname}</CardTitle>\r\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\r\n                            <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                            <Button>Button</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHome)\r\n","F:\\New folder\\log\\src\\components\\user\\UserLogin.js",["196","197","198"],"import React, {useState} from 'react'\r\nimport { Link,Redirect } from 'react-router-dom'\r\nimport { Form, FormGroup, Input, Label,Button, Alert } from 'reactstrap'\r\nimport donationSystem from '../../ethereum/donationSystem'\r\nimport web3 from '../../ethereum/web3'\r\nimport {connect} from 'react-redux'\r\nimport './UserLogin.css'\r\n\r\nfunction UserLogin(props) {\r\n    const [email, setemail] = useState(\"\")\r\n    const [userAdd, setuserAdd] = useState(\"\")\r\n    const [error, seterror] = useState(\"\")\r\n\r\n    \r\n    console.log(props.auth.email)\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        seterror(\"\")\r\n        await window.ethereum.enable()\r\n        try{\r\n            if(email !== props.auth.email){\r\n                throw \"Please Enter the Same Email That you Registered With\";\r\n            }\r\n            const accounts = await web3.eth.getAccounts();\r\n            const add = await donationSystem.methods.getUserContractAddress(email).call ({ from : accounts[0]});\r\n            console.log(\"Result\",add)\r\n            \r\n            setuserAdd(add)\r\n            \r\n            \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            seterror(e)\r\n        }\r\n        setemail(\"\")\r\n    }\r\n\r\n    console.log(\"Come On\",userAdd )\r\n    if(userAdd){\r\n        if(userAdd !== '0x0000000000000000000000000000000000000000')\r\n        return(\r\n            <Redirect  to={`/userhome/${userAdd}`} />\r\n        )\r\n    }    \r\n    return(\r\n        <div className=\"userLogin\">\r\n                <div className=\"userLogin__left\">\r\n                    \r\n                    <Form className=\"userLogin__leftForm\"  >\r\n                        <div className=\"userlogin__head\"> \r\n                            <p><h3>Welcome!</h3><br></br>\r\n                            <h3>Enter to the Ethereum world Here</h3></p>\r\n                            <img src=\"https://img.icons8.com/color/144/000000/woody-woodpecker.png\"/>\r\n                        </div>\r\n                            <FormGroup>\r\n                                <Label for=\"email\"><h5>Email :</h5></Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your Email That You Registered with\" \r\n                                    value={email}\r\n                                    onChange={event => {setemail(event.target.value)}}\r\n                                    required\r\n                                    />\r\n                            </FormGroup>\r\n                            {\r\n                                error ? \r\n                                <Alert color=\"danger\">{error}</Alert> : null\r\n                            }\r\n                            <Button onClick={handleSubmit} className=\"userLogin__leftbtn\" color=\"primary\" >Login</Button>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"userLogin__line\"></div>\r\n                <div className=\"userLogin__right\">\r\n                    <img className=\"userLogin__rightImg\" src=\"https://img.icons8.com/color/144/000000/optin-monster.png\"/>\r\n                    <h3>Hola! Welcome to E-BODs family.</h3>\r\n                    <h4>Are you new Here? Don't worry we got you back.🤩</h4>\r\n                    <Link to=\"/userRegister\"><Button className=\"userLogin__rightbtn\"  color=\"success\">Click Me</Button></Link> \r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserLogin)\r\n","F:\\New folder\\log\\src\\ethereum\\user.js",["199"],"import web3 from './web3'\r\nimport User from './build/User.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        User.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\user\\UserRequest.js",["200","201"],"import React, { useEffect,useState } from 'react'\r\nimport { Card, CardBody, CardHeader, CardText, CardTitle } from 'reactstrap'\r\nimport './UserRequest.css'\r\n// import web3 from '../../ethereum/web3'\r\n// import Request from '../../ethereum/request'\r\nimport firebase from '../../config/fbconfig'\r\n\r\nfunction UserRequest(props) {\r\n\r\n    const {requestAddress} = props;\r\n    const [Data, setData] = useState(null)\r\n\r\n    useEffect(async() => {\r\n        try{\r\n\r\n            // const accounts = await web3.eth.getAccounts();\r\n            // const request = Request(requestAddress);\r\n\r\n            var docRef = firebase.firestore().collection(`User`).doc(`${requestAddress}`);\r\n            \r\n            docRef.get().then(async(doc) => {\r\n                if (doc.exists) {\r\n                    console.log(\"Document data:\", doc.data());\r\n                    setData(doc.data())\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n        }catch(error){\r\n\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    console.log(Data)\r\n    return (\r\n        <div className=\"userRequest\">\r\n            <Card className=\"userRequest__card\">\r\n                <CardHeader>{Data ? Data.Title : null}</CardHeader>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">Donation Value ::  {Data ? Data.DonationValue : null} ether</CardTitle>\r\n                    <CardText>Created At ::  { Data ? Date(Data.Time) : null }</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRequest\r\n","F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js",["202","203","204"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Col, Container, Form, FormGroup, Input, Label, Button, UncontrolledCollapse, Card, CardBody, CardHeader, Row, CardTitle } from 'reactstrap'\r\nimport HospitalCom from './HospitalCom'\r\nimport './HospitalHome.css'\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport web3 from '../../ethereum/web3'\r\nimport Firebase from '../../config/fbconfig'\r\n\r\nfunction HospitalHome() {\r\n\r\n    const [Hname, setHname] = useState(\"\")\r\n    const [Hmail, setHmail] = useState(\"\")\r\n    const [HacAdrress, setHacAdrress] = useState(\"\")\r\n    const [Hlocation, setHlocation] = useState(\"\")\r\n    const [Hnumber, setHnumber] = useState(\"\")\r\n    const [HospitalList, setHospitalList] = useState(null)\r\n\r\n\r\n    const HandleHospitalSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        console.log(HacAdrress,Hname,Hmail,Hlocation,Hnumber);\r\n        const accounts = await web3.eth.getAccounts();\r\n        await hospitals.methods.createHospitalContract(HacAdrress,Hname,Hmail,Hlocation,Hnumber).send({ from : accounts[0]});\r\n\r\n        Firebase.firestore().collection(`Hospitals`).add({\r\n            hospitalAddress: HacAdrress,\r\n            HospitalName: Hname,\r\n            HospitalEmail : Hmail,\r\n            HospitalLocation : Hlocation,\r\n            HospitalContact : Hnumber,\r\n            Time : new Date(),\r\n        });\r\n        console.log(\"Data Stored\")\r\n    \r\n\r\n    }\r\n\r\n    useEffect(async() => {\r\n\r\n        await window.ethereum.enable();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const hospitalsList = await hospitals.methods.getDeployedHospitals().call({ from : accounts[0]});\r\n            setHospitalList(hospitalsList);\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [HospitalList])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"hopitalHome\">\r\n            <div className=\"hospitalHome__header\">\r\n                <hr></hr>\r\n                        <h2>Welcome to Hospital Section </h2>\r\n                        <img src=\"https://img.icons8.com/plasticine/100/000000/hospital-room.png\"/>\r\n                <hr></hr>\r\n            </div>\r\n            <Container className=\"hopitalHome__formConainer\">\r\n                \r\n                <Button className=\"formtoggle__btn\" color=\"primary\" id=\"toggler\" >\r\n                    Add New Hospital\r\n                </Button>\r\n                <UncontrolledCollapse toggler=\"#toggler\">\r\n                    <Card>\r\n                        <CardHeader tag=\"h3\">New Hospital Form</CardHeader>\r\n                        <CardBody>\r\n                            <Form>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hname\" sm={2}>Hospital name</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hname\" id=\"Hname\"\r\n                                        value={Hname}\r\n                                        onChange={event => setHname(event.target.value)}\r\n                                        placeholder=\"Hospital name\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Email\" sm={2}>Hospital Email</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"email\" name=\"Email\" id=\"Email\"\r\n                                        value={Hmail}\r\n                                        onChange={event => setHmail(event.target.value)}\r\n                                        placeholder=\"Email\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"AccAddress\" sm={2}>Hospital Account Address</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"AccAddress\" id=\"AccAddress\" \r\n                                        value={HacAdrress}\r\n                                        onChange={event => setHacAdrress(event.target.value)}\r\n                                        placeholder=\"Hospital Account Address\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hlocation\" sm={2}>Hospital Location</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input autoFocus type=\"select\" name=\"Hlocation\"\r\n                                        value={Hlocation}\r\n                                        onChange={event => setHlocation(event.target.value)}\r\n                                        id=\"Hlocation\">\r\n                                        <option>Mumbai</option>\r\n                                        <option>Pune</option>\r\n                                        <option>Ahmedabad</option>\r\n                                        <option>Bengaluru </option>\r\n                                        <option>Chennai</option>\r\n                                    </Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hnumber\" sm={2}>Hospital's contact No.</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hnumber\" id=\"Hnumber\"\r\n                                        value={Hnumber}\r\n                                        onChange={event => setHnumber(event.target.value)}\r\n                                        placeholder=\"Hospital's contact No.\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <Button color=\"success\" onClick={HandleHospitalSubmit}>Add Hospital</Button>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </UncontrolledCollapse>\r\n            </Container>\r\n\r\n            <div className=\"hospitalHome__hlist\">\r\n                <hr></hr>\r\n                <h3>Hospital list</h3>\r\n                <hr></hr>\r\n                <Row>\r\n\r\n                        {   HospitalList ? \r\n                            HospitalList.map((hospital) =>(\r\n                                <HospitalCom key={hospital} Haddress={hospital} />\r\n                            )) : null\r\n                        }\r\n                    {/* <HospitalCom />\r\n                    <HospitalCom />\r\n                    <HospitalCom /> */}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HospitalHome\r\n","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js",["205","206"],"import React,{useState,useEffect} from 'react';\r\nimport { Button, Card, CardBody, CardFooter, CardHeader, CardText, CardTitle, Col } from 'reactstrap';\r\nimport './HospitalCom.css'\r\nimport Hospital from '../../ethereum/hospital';\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport web3 from '../../ethereum/web3'\r\n\r\n\r\nfunction HospitalCom(props) {\r\n    const { Haddress } = props;\r\n    const [Hname, setHname] = useState(\"\")\r\n    const [Hmail, setHmail] = useState(\"\")\r\n    \r\n    const [Hlocation, setHlocation] = useState(\"\")\r\n    const [Hnumber, setHnumber] = useState(\"\")\r\n    const [ownAddress, setownAddress] = useState(\"\")\r\n\r\n    useEffect( async() => {\r\n        await window.ethereum.enable();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const hospital = Hospital(Haddress); \r\n            const name = await hospital.methods.hospitalName().call({ from : accounts[0]});\r\n            setHname(name)\r\n\r\n            const email = await hospital.methods.hospitalEmail().call({ from : accounts[0]});\r\n            setHmail(email)\r\n\r\n            const location = await hospital.methods.hospitalLocation().call({ from : accounts[0]});\r\n            setHlocation(location)\r\n\r\n            const phone = await hospital.methods.hospitalPhone().call({ from : accounts[0]});\r\n            setHnumber(phone)\r\n\r\n            const ownAdd = await hospital.methods.ownerAddress().call({ from : accounts[0]});\r\n            setownAddress(ownAdd)\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    const handleRemove = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        await window.ethereum.enable()\r\n        try{\r\n            \r\n            const accounts = await web3.eth.getAccounts();\r\n            \r\n            await hospitals.methods.removeHospital(Haddress).send({ from : accounts[0]});\r\n            \r\n            \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col className=\"hospitalComp\" sm={5}>\r\n            <Card>\r\n                <CardHeader tag=\"h4\">{Hname}</CardHeader>\r\n                <CardBody className=\"hospitaCard__body\">\r\n                    <div>\r\n                    <CardTitle>{Hmail}</CardTitle>\r\n                    <CardText>{Hlocation}, Contact No:: {Hnumber}</CardText>\r\n                    </div>\r\n                    <Button className=\"hospitaCard__btn\" color=\"danger\" onClick={handleRemove}>Remove</Button>\r\n                </CardBody>\r\n                <CardFooter>{ownAddress}</CardFooter>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default HospitalCom\r\n","F:\\New folder\\log\\src\\ethereum\\hospitals.js",[],"F:\\New folder\\log\\src\\ethereum\\hospital.js",["207"],"import web3 from './web3'\r\nimport Hospital from './build/Hospital.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        Hospital.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\donation\\Donate.js",["208","209","210"],"F:\\New folder\\log\\src\\components\\donation\\DonationRequest.js",["211","212"],"import React, { useEffect,useState } from 'react'\r\nimport { Button, Card, CardText, CardTitle, Col } from 'reactstrap'\r\nimport web3 from '../../ethereum/web3'\r\nimport Request from '../../ethereum/request'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction DonationRequest(props) {\r\n    const {reqAdd} = props;\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [DonationVal, setDonationVal] = useState(\"\")\r\n\r\n    useEffect(async() => {\r\n        \r\n        await window.ethereum.enable()\r\n        try{\r\n        const accounts = await web3.eth.getAccounts();\r\n        const request = Request(reqAdd);\r\n        console.log(\"Request Contract\",await request.methods)\r\n        const title = await request.methods.name().call({from: accounts[0]});\r\n        setTitle(title);\r\n        const val = await request.methods.donationValue().call({from: accounts[0]});\r\n        setDonationVal(val);\r\n        // const deployedUsers = await request.methods.getDeployedUsers().call({from: accounts[0]});\r\n        \r\n        }\r\n        catch(e){\r\n\r\n        }\r\n\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Col sm=\"6\" xs=\"12\" >\r\n        <div className=\"donationRequest\"> \r\n            <Card body>\r\n                <CardTitle tag=\"h5\">{Title}</CardTitle>\r\n                <CardText>Requested Fundings :: {DonationVal} , Ethere   </CardText>\r\n                <CardText><Link to={`/donate/${reqAdd}`}><Button color=\"success\">Give Penny</Button></Link></CardText>\r\n            </Card>\r\n        </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default DonationRequest\r\n","F:\\New folder\\log\\src\\ethereum\\request.js",["213"],"import web3 from './web3'\r\nimport Request from './build/Request.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        Request.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\donation\\RequestDetail.js",["214","215","216","217","218","219"],"F:\\New folder\\log\\src\\components\\admin\\UserRequestSec.js",["220","221","222","223"],"import React,{useState,useEffect} from 'react'\r\nimport { Button, Card, CardText, CardTitle, Col, Container, Row, Table } from 'reactstrap'\r\nimport './UserRequestSec.css'\r\nimport web3 from '../../ethereum/web3'\r\nimport User from '../../ethereum/user'\r\nimport donationSystem from '../../ethereum/donationSystem'\r\n\r\nimport Lottie from 'react-lottie';\r\nimport allUser from '../../animations/55356-chris-gannon.json'\r\nimport activeUs from '../../animations/29780-users-and-vr-loop.json'\r\nimport activeReq from '../../animations/7843-flixxo-coins.json'\r\nimport pendingReq from '../../animations/5527-alert-notification-character.json'\r\nimport DonationRequest from '../donation/DonationRequest'\r\n\r\n\r\nfunction UserRequestSec() {\r\n\r\n    const [PendingRequest, setPendingRequest] = useState(null)\r\n    const [Array1, setArray1] = useState([1,2,3,4,5,6])\r\n\r\n    const defaultOptions0 = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: allUser,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const defaultOptions1 = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: activeUs,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const defaultOptions2 = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: pendingReq,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const defaultOptions3 = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: activeReq,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    useEffect(async() => {\r\n        \r\n        let allpendingRequestList = []\r\n        await window.ethereum.enable()\r\n        try{\r\n        const accounts = await web3.eth.getAccounts();\r\n        const deployedUsers = await donationSystem.methods.getDeployedUsers().call({from: accounts[0]});\r\n        console.log(\"hu j chu\",deployedUsers);\r\n        // setdeployesUserList(deployedUsers);\r\n        \r\n        deployedUsers.map(async(userAddress) => {\r\n            const user = User(userAddress);\r\n            const reqList = await user.methods.getRequests().call({from: accounts[0]});\r\n            reqList.map(req => {\r\n                console.log(\"Request Is ::\",req)\r\n                allpendingRequestList.push(req)  \r\n            })\r\n        })\r\n\r\n        \r\n        console.log(\"Akhil\",allpendingRequestList)\r\n        setPendingRequest(allpendingRequestList)}\r\n        catch(e){\r\n\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n    console.log(\"BDhjsabk\",PendingRequest)\r\n    return (\r\n        <Container className=\"userRequestSec\" fluid>\r\n            <div className=\"userRequestSec__header\">\r\n                <h3>User Requests Section,</h3>\r\n            </div>\r\n            <div>\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"3\">\r\n                        <Card body>\r\n                        <CardTitle className=\"cardTitlesAlign\" tag=\"h5\">Available Users <Lottie \r\n                            options={defaultOptions0}\r\n                            height={100}\r\n                            width={100}\r\n                            /></CardTitle>\r\n                        <CardText className=\"cardTitlesAlign\"><h4>132</h4> <p className=\"cardTextLight\">Since last Month</p></CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs=\"6\" sm=\"3\">\r\n                        <Card body>\r\n                        <CardTitle className=\"cardTitlesAlign\" tag=\"h5\">Active Users <Lottie \r\n                            options={defaultOptions1}\r\n                            height={100}\r\n                            width={100}\r\n                            /></CardTitle>\r\n                        <CardText className=\"cardTitlesAlign\"><h4>56</h4> <p className=\"cardTextLight\">Since last Month</p></CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs=\"6\" sm=\"3\">\r\n                        <Card body>\r\n                        <CardTitle className=\"cardTitlesAlign\" tag=\"h5\">Active Requests<Lottie \r\n                            options={defaultOptions3}\r\n                            height={100}\r\n                            width={100}\r\n                            /></CardTitle>\r\n                        <CardText className=\"cardTitlesAlign\"><h4>294</h4> <p className=\"cardTextLight\">Since last Month</p></CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"3\">\r\n                        <Card body>\r\n                        <CardTitle className=\"cardTitlesAlign\" tag=\"h5\">Pending Requests<Lottie \r\n                            options={defaultOptions2}\r\n                            height={100}\r\n                            width={100}\r\n                            /></CardTitle>\r\n                        <CardText className=\"cardTitlesAlign\"><h4>39</h4> <p className=\"cardTextLight\">Since last Month</p></CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    {PendingRequest ? PendingRequest.map(req => (\r\n                            <DonationRequest   key={req} reqAdd={req} />\r\n                        ) ) : null}\r\n                </Row>\r\n            </div>\r\n\r\n            <div>\r\n                <Card style={{padding: \"10px\", marginTop:\"10px\", marginBottom:\"10px\"}}><h2>Approve Table</h2>\r\n                <Card className=\"requestTable\"  body>\r\n                        \r\n                        <Table  hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th>\r\n                                <th>User Name</th> \r\n                                <th>Request Name</th>\r\n                                <th>Amount Require</th>\r\n                                <th>Documents</th>\r\n                                <th>Approve</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody >\r\n{/*                                 \r\n                                {\r\n                                    PendingRequest ? PendingRequest.map(preq => (\r\n                                            <tr>\r\n                                            <th scope=\"row\">1</th>\r\n                                            <td>{preq}</td>\r\n                                            <td>Otto</td>\r\n                                            <td>@mdo</td>\r\n                                            <td>Otto</td>\r\n                                            <Button color=\"success\">Approve</Button>\r\n                                            </tr>\r\n                                        )\r\n                                    ) : null\r\n                                // } */}\r\n                                <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Larry</td>\r\n                                <td>the Bird</td>\r\n                                <td>@twitter</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr><tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Larry</td>\r\n                                <td>the Bird</td>\r\n                                <td>@twitter</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr><tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Larry</td>\r\n                                <td>the Bird</td>\r\n                                <td>@twitter</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                </Card></Card>\r\n            </div>\r\n            <div>\r\n                <Card style={{padding: \"10px\", marginTop:\"10px\", marginBottom:\"10px\"}}><h2>Final Complete Table</h2>\r\n                <Card className=\"requestTable\"  body>\r\n                        \r\n                        <Table  hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th>\r\n                                <th>User Name</th> \r\n                                <th>Request Name</th>\r\n                                <th>Amount Require</th>\r\n                                <th>Documents</th>\r\n                                <th>Approve</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody >\r\n                                <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                <td>Otto</td>\r\n                                <Button color=\"success\">Approve</Button>\r\n                                </tr>\r\n                                <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td>Jacob</td>\r\n                                <td>Thornton</td>\r\n                                <td>@fat</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Larry</td>\r\n                                <td>the Bird</td>\r\n                                <td>@twitter</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr>\r\n                                <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Larry</td>\r\n                                <td>the Bird</td>\r\n                                <td>@twitter</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                </Card></Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserRequestSec\r\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"224","replacedBy":"228"},{"ruleId":"226","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":2,"column":19,"nodeType":"232","messageId":"233","endLine":2,"endColumn":28},{"ruleId":"230","severity":1,"message":"234","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":16},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":18},{"ruleId":"230","severity":1,"message":"236","line":17,"column":12,"nodeType":"232","messageId":"233","endLine":17,"endColumn":18},{"ruleId":"230","severity":1,"message":"237","line":17,"column":20,"nodeType":"232","messageId":"233","endLine":17,"endColumn":29},{"ruleId":"230","severity":1,"message":"235","line":5,"column":10,"nodeType":"232","messageId":"233","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":16,"column":15,"nodeType":"240","endLine":39,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":42,"column":67,"nodeType":"243","messageId":"244","endLine":42,"endColumn":69},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":24,"nodeType":"232","messageId":"233","endLine":1,"endColumn":33},{"ruleId":"230","severity":1,"message":"234","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":16},{"ruleId":"230","severity":1,"message":"246","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":13},{"ruleId":"247","severity":1,"message":"248","line":77,"column":17,"nodeType":"249","endLine":77,"endColumn":77},{"ruleId":"230","severity":1,"message":"250","line":2,"column":143,"nodeType":"232","messageId":"233","endLine":2,"endColumn":151},{"ruleId":"230","severity":1,"message":"251","line":19,"column":25,"nodeType":"232","messageId":"233","endLine":19,"endColumn":39},{"ruleId":"230","severity":1,"message":"252","line":21,"column":12,"nodeType":"232","messageId":"233","endLine":21,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":36,"column":15,"nodeType":"240","endLine":80,"endColumn":6},{"ruleId":"238","severity":1,"message":"253","line":80,"column":8,"nodeType":"254","endLine":80,"endColumn":10,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":22,"column":17,"nodeType":"258","messageId":"259","endLine":22,"endColumn":78},{"ruleId":"260","severity":1,"message":"261","line":54,"column":29,"nodeType":"249","endLine":54,"endColumn":102},{"ruleId":"260","severity":1,"message":"261","line":73,"column":21,"nodeType":"249","endLine":73,"endColumn":123},{"ruleId":"262","severity":1,"message":"263","line":4,"column":1,"nodeType":"264","endLine":9,"endColumn":3},{"ruleId":"238","severity":1,"message":"239","line":13,"column":15,"nodeType":"240","endLine":39,"endColumn":6},{"ruleId":"238","severity":1,"message":"265","line":39,"column":8,"nodeType":"254","endLine":39,"endColumn":10,"suggestions":"266"},{"ruleId":"230","severity":1,"message":"267","line":3,"column":120,"nodeType":"232","messageId":"233","endLine":3,"endColumn":129},{"ruleId":"238","severity":1,"message":"239","line":39,"column":15,"nodeType":"240","endLine":54,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":64,"column":25,"nodeType":"249","endLine":64,"endColumn":100},{"ruleId":"238","severity":1,"message":"239","line":18,"column":16,"nodeType":"240","endLine":44,"endColumn":6},{"ruleId":"238","severity":1,"message":"268","line":44,"column":8,"nodeType":"254","endLine":44,"endColumn":10,"suggestions":"269"},{"ruleId":"262","severity":1,"message":"263","line":4,"column":1,"nodeType":"264","endLine":9,"endColumn":3},{"ruleId":"238","severity":1,"message":"239","line":37,"column":15,"nodeType":"240","endLine":64,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":49,"column":29,"nodeType":"240","messageId":"272","endLine":49,"endColumn":31},{"ruleId":"238","severity":1,"message":"273","line":64,"column":8,"nodeType":"254","endLine":64,"endColumn":10,"suggestions":"274"},{"ruleId":"238","severity":1,"message":"239","line":13,"column":15,"nodeType":"240","endLine":35,"endColumn":6},{"ruleId":"238","severity":1,"message":"275","line":35,"column":8,"nodeType":"254","endLine":35,"endColumn":10,"suggestions":"276"},{"ruleId":"262","severity":1,"message":"263","line":4,"column":1,"nodeType":"264","endLine":9,"endColumn":3},{"ruleId":"230","severity":1,"message":"277","line":16,"column":28,"nodeType":"232","messageId":"233","endLine":16,"endColumn":45},{"ruleId":"238","severity":1,"message":"239","line":33,"column":16,"nodeType":"240","endLine":54,"endColumn":6},{"ruleId":"238","severity":1,"message":"265","line":54,"column":8,"nodeType":"254","endLine":54,"endColumn":10,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":82,"column":33,"nodeType":"249","endLine":82,"endColumn":45},{"ruleId":"279","severity":1,"message":"280","line":83,"column":33,"nodeType":"249","endLine":83,"endColumn":45},{"ruleId":"281","severity":1,"message":"282","line":114,"column":102,"nodeType":"283","endLine":114,"endColumn":117},{"ruleId":"230","severity":1,"message":"284","line":19,"column":12,"nodeType":"232","messageId":"233","endLine":19,"endColumn":18},{"ruleId":"230","severity":1,"message":"285","line":19,"column":20,"nodeType":"232","messageId":"233","endLine":19,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":59,"column":15,"nodeType":"240","endLine":87,"endColumn":6},{"ruleId":"270","severity":1,"message":"271","line":72,"column":29,"nodeType":"240","messageId":"272","endLine":72,"endColumn":31},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],["286"],["287"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'Redirect' is defined but never used.","'Admins' is assigned a value but never used.","'setAdmins' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardHeader' is defined but never used.","'admin' is defined but never used.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","'FormText' is defined but never used.","'setuserAddress' is assigned a value but never used.","'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userAddress'. Either include it or remove the dependency array.","ArrayExpression",["288"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'requestAddress'. Either include it or remove the dependency array.",["289"],"'CardTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'Haddress'. Either include it or remove the dependency array.",["290"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'allActiveRequestList'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has a missing dependency: 'reqAdd'. Either include it or remove the dependency array.",["292"],"'setrequestAddress' is assigned a value but never used.",["293"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Array1' is assigned a value but never used.","'setArray1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"296","fix":"304"},"Update the dependencies array to be: [userAddress]",{"range":"305","text":"306"},"Update the dependencies array to be: [requestAddress]",{"range":"307","text":"308"},"Update the dependencies array to be: [Haddress]",{"range":"309","text":"310"},"Update the dependencies array to be: [allActiveRequestList]",{"range":"311","text":"312"},"Update the dependencies array to be: [reqAdd]",{"range":"313","text":"314"},{"range":"315","text":"308"},[2964,2966],"[userAddress]",[1257,1259],"[requestAddress]",[1605,1607],"[Haddress]",[1858,1860],"[allActiveRequestList]",[1107,1109],"[reqAdd]",[1854,1856]]