[{"F:\\New folder\\log\\src\\index.js":"1","F:\\New folder\\log\\src\\App.js":"2","F:\\New folder\\log\\src\\reportWebVitals.js":"3","F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js":"4","F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js":"5","F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js":"6","F:\\New folder\\log\\src\\components\\layout\\Footer.js":"7","F:\\New folder\\log\\src\\components\\dashboard\\Home.js":"8","F:\\New folder\\log\\src\\components\\auth\\SignIn.js":"9","F:\\New folder\\log\\src\\components\\auth\\SignUp.js":"10","F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js":"11","F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js":"12","F:\\New folder\\log\\src\\store\\reducers\\authReducer.js":"13","F:\\New folder\\log\\src\\config\\fbconfig.js":"14","F:\\New folder\\log\\src\\store\\actions\\authAction.js":"15","F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js":"16","F:\\New folder\\log\\src\\helper\\PrivateRoute.js":"17","F:\\New folder\\log\\src\\components\\user\\UserRegister.js":"18","F:\\New folder\\log\\src\\store\\actions\\projectAction.js":"19","F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js":"20","F:\\New folder\\log\\src\\ethereum\\admin.js":"21","F:\\New folder\\log\\src\\ethereum\\web3.js":"22","F:\\New folder\\log\\src\\components\\admin\\ListComponent.js":"23","F:\\New folder\\log\\src\\ethereum\\approvers.js":"24","F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js":"25","F:\\New folder\\log\\src\\ethereum\\donationSystem.js":"26","F:\\New folder\\log\\src\\components\\user\\UserHome.js":"27","F:\\New folder\\log\\src\\components\\user\\UserLogin.js":"28","F:\\New folder\\log\\src\\ethereum\\user.js":"29","F:\\New folder\\log\\src\\components\\user\\UserRequest.js":"30","F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js":"31","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js":"32","F:\\New folder\\log\\src\\ethereum\\hospitals.js":"33","F:\\New folder\\log\\src\\ethereum\\hospital.js":"34"},{"size":1317,"mtime":1612867536417,"results":"35","hashOfConfig":"36"},{"size":2140,"mtime":1614998870247,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":1439,"mtime":1614657726555,"results":"39","hashOfConfig":"36"},{"size":407,"mtime":1609475142179,"results":"40","hashOfConfig":"36"},{"size":846,"mtime":1615176156533,"results":"41","hashOfConfig":"36"},{"size":4525,"mtime":1614048595013,"results":"42","hashOfConfig":"36"},{"size":2235,"mtime":1613897820829,"results":"43","hashOfConfig":"36"},{"size":2207,"mtime":1613361228548,"results":"44","hashOfConfig":"36"},{"size":3308,"mtime":1613615862789,"results":"45","hashOfConfig":"36"},{"size":435,"mtime":1597725126514,"results":"46","hashOfConfig":"36"},{"size":442,"mtime":1613615673245,"results":"47","hashOfConfig":"36"},{"size":1073,"mtime":1612737497012,"results":"48","hashOfConfig":"36"},{"size":566,"mtime":1613614978664,"results":"49","hashOfConfig":"36"},{"size":1522,"mtime":1612758455797,"results":"50","hashOfConfig":"36"},{"size":6771,"mtime":1614048569690,"results":"51","hashOfConfig":"36"},{"size":751,"mtime":1613360757233,"results":"52","hashOfConfig":"36"},{"size":6128,"mtime":1614995467767,"results":"53","hashOfConfig":"36"},{"size":1070,"mtime":1613620769728,"results":"54","hashOfConfig":"36"},{"size":7442,"mtime":1614999839596,"results":"55","hashOfConfig":"36"},{"size":220,"mtime":1614998497804,"results":"56","hashOfConfig":"36"},{"size":486,"mtime":1613878816716,"results":"57","hashOfConfig":"36"},{"size":1682,"mtime":1614054806665,"results":"58","hashOfConfig":"36"},{"size":239,"mtime":1614053394656,"results":"59","hashOfConfig":"36"},{"size":3657,"mtime":1614220134431,"results":"60","hashOfConfig":"36"},{"size":264,"mtime":1614832513592,"results":"61","hashOfConfig":"36"},{"size":1541,"mtime":1614996322424,"results":"62","hashOfConfig":"36"},{"size":3571,"mtime":1615345067328,"results":"63","hashOfConfig":"36"},{"size":181,"mtime":1614832305164,"results":"64","hashOfConfig":"36"},{"size":637,"mtime":1614996688905,"results":"65","hashOfConfig":"36"},{"size":6544,"mtime":1615202381473,"results":"66","hashOfConfig":"36"},{"size":2012,"mtime":1615203176072,"results":"67","hashOfConfig":"36"},{"size":239,"mtime":1614998587015,"results":"68","hashOfConfig":"36"},{"size":193,"mtime":1615202550190,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1nqew19",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},"F:\\New folder\\log\\src\\index.js",[],["147","148"],"F:\\New folder\\log\\src\\App.js",[],"F:\\New folder\\log\\src\\reportWebVitals.js",[],["149","150"],"F:\\New folder\\log\\src\\components\\layout\\Navbar-Layout.js",[],"F:\\New folder\\log\\src\\components\\layout\\SignoutLinks.js",[],"F:\\New folder\\log\\src\\components\\layout\\SignInLinks.js",[],"F:\\New folder\\log\\src\\components\\layout\\Footer.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\Home.js",[],"F:\\New folder\\log\\src\\components\\auth\\SignIn.js",[],"F:\\New folder\\log\\src\\components\\auth\\SignUp.js",[],"F:\\New folder\\log\\src\\store\\reducers\\rootReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\projectReducer.js",[],"F:\\New folder\\log\\src\\store\\reducers\\authReducer.js",[],"F:\\New folder\\log\\src\\config\\fbconfig.js",[],"F:\\New folder\\log\\src\\store\\actions\\authAction.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\ContactUs.js",[],"F:\\New folder\\log\\src\\helper\\PrivateRoute.js",[],"F:\\New folder\\log\\src\\components\\user\\UserRegister.js",["151"],"import React, {Component} from 'react'\r\nimport { Button, Form, FormGroup, Label, Input,Spinner, Alert} from 'reactstrap';\r\nimport './UserRegister.css'\r\nimport web3 from '../../ethereum/web3'\r\nimport admin from '../../ethereum/admin';\r\nimport donationSystem from '../../ethereum/donationSystem'\r\n// import firebase from '../../config/fbconfig'\r\nimport { Link } from 'react-router-dom';\r\n\r\n    \r\nclass UserRegister extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email:\"\", aadhar:\"\",fullname:\"\",mobile:\"\",spin: false,errMsg:\"\",result:false};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const admins = await admin.methods.getAdmins().call({ from : accounts[0]});\r\n            const users = await donationSystem.methods.getDeployedUsers().call({from: accounts[0]})\r\n            console.log(\"Hello\",users)\r\n            \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        this.setState({errMsg:\"\"})\r\n        this.setState({spin: true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state)\r\n            await donationSystem.methods.createUserContact(this.state.fullname,this.state.email,this.state.aadhar,this.state.mobile).send({ from : accounts[0]});\r\n            const add = await donationSystem.methods.getUserContractAddress(this.state.email).call ({ from : accounts[0]});\r\n            console.log(\"my\",add)\r\n            this.setState({result:true})\r\n        }\r\n        catch(e){\r\n            this.setState({errMsg:e.message})\r\n        }\r\n        this.setState({spin: false})\r\n        \r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.adminInput)\r\n        return (\r\n            <div className=\"userRegister\">\r\n            <div className=\"userRegister__body\">\r\n                <h3>Register Your Self here :: </h3><br></br>\r\n                <Form onSubmit={this.handleSubmit} >\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name as on Addhar\" \r\n                            value={this.state.fullname} \r\n                            onChange={e => this.setState({fullname:e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\"\r\n                            value={this.state.email}\r\n                            placeholder=\"xyz@abc.com\" \r\n                            onChange={e => this.setState({email: e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"aadhar\">Aadhar No.</Label>\r\n                        <Input type=\"text\" name=\"aadhar\" id=\"aadhar\" placeholder=\"Your Aadhar no\"\r\n                            value={this.state.aadhar} \r\n                            onChange={e => this.setState({aadhar: e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"mobile\">Mobile No.</Label>\r\n                        <Input type=\"mobile\" name=\"mobile\" id=\"mobile\"\r\n                            placeholder=\"Your Mobile No.\" \r\n                            value={this.state.mobile}\r\n                            onChange={e => this.setState({mobile :e.target.value})}\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                        <Label for=\"documents\">Documents</Label>\r\n                        <CustomInput type=\"file\"\r\n\r\n                            onChange={ handleDocChange}\r\n                            id=\"exampleCustomFileBrowser\" name=\"customFile\"  />\r\n                        <FormText color=\"muted\">\r\n                            This is some placeholder block-level help text for the above input.\r\n                            It's a bit lighter and easily wraps to a new line.\r\n                        </FormText>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                        <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\r\n                        Check me out\r\n                        </Label>\r\n                    </FormGroup> */}\r\n\r\n                    {\r\n                        !this.state.spin ?\r\n                            <Button className=\"userRegister__btn\" >Submit</Button>: \r\n                            <Spinner color=\"primary\" />\r\n                    }\r\n                    \r\n                    <div style={{marginTop: \"10px\"}}>\r\n                        {this.state.errMsg ? \r\n                            <Alert color=\"danger\">\r\n                                {this.state.errMsg.substr(0,50)}\r\n                            </Alert> : null\r\n                        }\r\n                    </div> \r\n                    <div style={{marginTop: \"10px\"}}>\r\n                        {this.state.result ? \r\n                            <Alert color=\"success\">\r\n                                You Have succesfully registered! <Link to=\"/userlogin\"> Click Here to Continue</Link>\r\n                            </Alert> : null\r\n                        }\r\n                    </div> \r\n                </Form>\r\n\r\n                <div className=\"userRegister__bottomLine\">Already Have an Acoount? <Link to=\"/userlogin\">click here</Link> </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default UserRegister","F:\\New folder\\log\\src\\store\\actions\\projectAction.js",[],"F:\\New folder\\log\\src\\components\\admin\\AdminPanel.js",["152"],"import React, { Component } from 'react'\r\nimport { Container, Form, FormGroup, Input,Button,Col, Spinner, Label, Row,  Alert } from 'reactstrap';\r\nimport admin from '../../ethereum/admin';\r\nimport approver from '../../ethereum/approvers';\r\nimport web3 from '../../ethereum/web3'\r\nimport './AdminPanel.css'\r\nimport ListComponent from './ListComponent'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\nclass Adminpanel extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {admins: null, approvers:null, adminInput:\"Enter Admin Address\",approverInput:\"Enter Approver Address\",spin: false,spin2: false,errorMsg:\"\",errorMsg2:\"\"};\r\n        this.handleSubmitAdmin = this.handleSubmitAdmin.bind(this);\r\n        this.handleSubmitApprover = this.handleSubmitApprover.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const admins = await admin.methods.getAdmins().call({ from : accounts[0]});\r\n            \r\n            const approvers = await approver.methods.getAprrovers().call({ from : accounts[0]})\r\n            console.log(\"Hello\",approvers)\r\n            this.setState({admins,approvers})\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    async handleSubmitAdmin(e){\r\n        e.preventDefault();\r\n        this.setState({spin:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.adminInput)\r\n            await admin.methods.addAdmin(this.state.adminInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin:false, adminInput:\"\"})\r\n    }\r\n\r\n    async handleSubmitApprover(e){\r\n        e.preventDefault();\r\n        this.setState({spin2:true})\r\n        await window.ethereum.enable()\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"sdfd\",this.state.approverInput)\r\n            await approver.methods.addApprover(this.state.approverInput).send({ from : accounts[0]});\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            this.setState({errorMsg2: e.message})\r\n            console.log(e)\r\n        }\r\n        this.setState({spin2:false, approverInput:\"\"})\r\n    }\r\n    \r\n    \r\n    render() {\r\n        // console.log(this.state.adminInput)\r\n        return (\r\n            <div className=\"adminPanel\">\r\n                <marquee scrollamount=\"10\"  className=\"adminPanel__marquee\"><h5>🙏🙏Operations On Ethereum block-chain take 15-30 seconds to complete. Please have some patience🙏🙏</h5></marquee>\r\n                <div className=\"adminPanel__header\"><hr></hr>\r\n                    <div className=\"adminPanel__headerTitle\">\r\n                        <h2>Welcome to Admin Panel </h2>\r\n                        <img alt=\"\" src=\"https://img.icons8.com/bubbles/100/000000/admin-settings-male.png\"/>\r\n                    </div>\r\n                    <Link to=\"/admin/hospitalhome\"><Button className=\"adminPanel__headerbtn\" color=\"danger\">Hospital Section</Button></Link>\r\n                <hr></hr></div>\r\n                <Container className=\"adminPanel__formConainer\">\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form  className=\"formConainer__form\" onSubmit={this.handleSubmitAdmin}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"adminAdd\" className=\"mr-sm-2 formConainer__label\">Admin Address</Label>\r\n                                <Input className=\"formConainer__input\" \r\n                                    value={this.state.adminInput}\r\n                                    onChange={(e) => this.setState({adminInput: e.target.value})}\r\n                                    type=\"text\" name=\"adminAdd\" id=\"adminAdd\" placeholder=\"Admin Address\" />\r\n                            </FormGroup>\r\n                            {\r\n                                !this.state.spin ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg}\r\n                            </Alert> : null\r\n                        }\r\n                        \r\n                    </Col></Row>\r\n                    <hr></hr>\r\n                    <Row><Col className=\"formConainer__col\">\r\n                        <Form className=\"formConainer__form\" onSubmit={this.handleSubmitApprover}>\r\n                            <FormGroup className=\"mb-2 formConainer__formgroup mr-sm-2 mb-sm-0\">\r\n                                <Label for=\"approverAdd\" className=\"mr-sm-2 formConainer__label\">Approver Address</Label>\r\n                                <Input className=\"formConainer__input\"\r\n                                    value={this.state.approverInput}\r\n                                    onChange={(e) => this.setState({approverInput: e.target.value})}\r\n                                    type=\"text\" name=\"approverAdd\" id=\"approverAdd\" placeholder=\"Approver Address\" />\r\n                            </FormGroup> \r\n                            {\r\n                                !this.state.spin2 ?\r\n                                <Button color=\"success\" className=\"formConainer__btn\">Add</Button> : \r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            \r\n                        </Form>\r\n                        {\r\n                            this.state.errorMsg2 ?\r\n                            <Alert color=\"danger\" isOpen=\"true\"  fade={false}>\r\n                                {this.state.errorMsg2}\r\n                            </Alert> : null\r\n                        }\r\n                    </Col></Row>\r\n                </Container>\r\n                <div className=\"adminPanel__listGroup\" >\r\n                    <div className=\"adminPanel__adminlist\">\r\n                        <div><h3>Admin's list</h3></div>\r\n                        {   this.state.admins ? \r\n                            this.state.admins.map((admin) =>(\r\n                                <ListComponent adminAdd={admin} flag={false} key={admin} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"adminPanel__approverslist\">\r\n                        <div><h3>Approver's list</h3></div>\r\n                        {   this.state.approvers ? \r\n                            this.state.approvers.map((approver) =>(\r\n                                <ListComponent approverAdd={approver} flag={true} key={approver} />\r\n                            )) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Adminpanel\r\n","F:\\New folder\\log\\src\\ethereum\\admin.js",[],"F:\\New folder\\log\\src\\ethereum\\web3.js",[],"F:\\New folder\\log\\src\\components\\admin\\ListComponent.js",[],"F:\\New folder\\log\\src\\ethereum\\approvers.js",[],"F:\\New folder\\log\\src\\components\\dashboard\\AboutUs.js",[],"F:\\New folder\\log\\src\\ethereum\\donationSystem.js",[],"F:\\New folder\\log\\src\\components\\user\\UserHome.js",["153","154","155"],"import React,{useState,useEffect} from 'react'\r\nimport { Alert,Button } from 'reactstrap'\r\nimport './UserHome.css'\r\nimport User from '../../ethereum/user'\r\nimport web3 from '../../ethereum/web3'\r\nimport UserRequest from './UserRequest'\r\n\r\nfunction UserHome(props) {\r\n\r\n    const [userAddress, setuserAddress] = useState(props.location.pathname.substr(10))\r\n    const [uname, setuname] = useState(\"\")\r\n\r\n    useEffect(async() => {\r\n        \r\n        await window.ethereum.enable()\r\n        const accounts = await web3.eth.getAccounts();\r\n        const user = User(userAddress);\r\n        const name = await user.methods.name().call({from: accounts[0]});\r\n        setuname(name)\r\n        console.log(\"user name\",name)\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"userHome\">\r\n            <div className=\"userHome__upper\">\r\n                <Alert className=\"upper__header\" color=\"info\">\r\n                    <Button className=\"upper__btnlft\" outline color=\"danger\">Create FundRaiser</Button>\r\n                    <h4>{uname}'s Dashboard</h4>\r\n                    <Button className=\"upper__btnrgt\" outline color=\"danger\">AJ</Button>\r\n                </Alert>\r\n            </div>\r\n            <div className=\"userHome__list\">\r\n                <div className=\"userHome__requestlist\">\r\n                        <div><h3>Your Requests lists</h3></div>\r\n                        <UserRequest />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserHome\r\n","F:\\New folder\\log\\src\\components\\user\\UserLogin.js",["156","157","158","159"],"F:\\New folder\\log\\src\\ethereum\\user.js",["160"],"import web3 from './web3'\r\nimport User from './build/User.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        User.abi,\r\n        address\r\n    );\r\n};\r\n","F:\\New folder\\log\\src\\components\\user\\UserRequest.js",[],"F:\\New folder\\log\\src\\components\\hospitals\\HospitalHome.js",["161","162","163"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Col, Container, Form, FormGroup, Input, Label, Button, UncontrolledCollapse, Card, CardBody, CardHeader, Row, CardTitle } from 'reactstrap'\r\nimport HospitalCom from './HospitalCom'\r\nimport './HospitalHome.css'\r\nimport hospitals from '../../ethereum/hospitals';\r\nimport web3 from '../../ethereum/web3'\r\n\r\nfunction HospitalHome() {\r\n\r\n    const [Hname, setHname] = useState(\"\")\r\n    const [Hmail, setHmail] = useState(\"\")\r\n    const [HacAdrress, setHacAdrress] = useState(\"\")\r\n    const [Hlocation, setHlocation] = useState(\"\")\r\n    const [Hnumber, setHnumber] = useState(\"\")\r\n    const [HospitalList, setHospitalList] = useState(null)\r\n\r\n\r\n    const HandleHospitalSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        console.log(HacAdrress,Hname,Hmail,Hlocation,Hnumber);\r\n        const accounts = await web3.eth.getAccounts();\r\n        await hospitals.methods.createHospitalContract(HacAdrress,Hname,Hmail,Hlocation,Hnumber).send({ from : accounts[0]});\r\n\r\n    }\r\n\r\n    useEffect(async() => {\r\n\r\n        await window.ethereum.enable();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const hospitalsList = await hospitals.methods.getDeployedHospitals().call({ from : accounts[0]});\r\n            setHospitalList(hospitalsList);\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [HospitalList])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"hopitalHome\">\r\n            <div className=\"hospitalHome__header\">\r\n                <hr></hr>\r\n                        <h2>Welcome to Hospital Section </h2>\r\n                        <img src=\"https://img.icons8.com/plasticine/100/000000/hospital-room.png\"/>\r\n                <hr></hr>\r\n            </div>\r\n            <Container className=\"hopitalHome__formConainer\">\r\n                \r\n                <Button className=\"formtoggle__btn\" color=\"primary\" id=\"toggler\" >\r\n                    Add New Hospital\r\n                </Button>\r\n                <UncontrolledCollapse toggler=\"#toggler\">\r\n                    <Card>\r\n                        <CardHeader tag=\"h3\">New Hospital Form</CardHeader>\r\n                        <CardBody>\r\n                            <Form>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hname\" sm={2}>Hospital name</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hname\" id=\"Hname\"\r\n                                        value={Hname}\r\n                                        onChange={event => setHname(event.target.value)}\r\n                                        placeholder=\"Hospital name\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Email\" sm={2}>Hospital Email</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"email\" name=\"Email\" id=\"Email\"\r\n                                        value={Hmail}\r\n                                        onChange={event => setHmail(event.target.value)}\r\n                                        placeholder=\"Email\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"AccAddress\" sm={2}>Hospital Account Address</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"AccAddress\" id=\"AccAddress\" \r\n                                        value={HacAdrress}\r\n                                        onChange={event => setHacAdrress(event.target.value)}\r\n                                        placeholder=\"Hospital Account Address\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hlocation\" sm={2}>Hospital Location</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input autoFocus type=\"select\" name=\"Hlocation\"\r\n                                        value={Hlocation}\r\n                                        onChange={event => setHlocation(event.target.value)}\r\n                                        id=\"Hlocation\">\r\n                                        <option>Mumbai</option>\r\n                                        <option>Pune</option>\r\n                                        <option>Ahmedabad</option>\r\n                                        <option>Bengaluru </option>\r\n                                        <option>Chennai</option>\r\n                                    </Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"Hnumber\" sm={2}>Hospital's contact No.</Label>\r\n                                    <Col sm={10}>\r\n                                    <Input type=\"text\" name=\"Hnumber\" id=\"Hnumber\"\r\n                                        value={Hnumber}\r\n                                        onChange={event => setHnumber(event.target.value)}\r\n                                        placeholder=\"Hospital's contact No.\" />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <Button color=\"success\" onClick={HandleHospitalSubmit}>Add Hospital</Button>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </UncontrolledCollapse>\r\n            </Container>\r\n\r\n            <div className=\"hospitalHome__hlist\">\r\n                <hr></hr>\r\n                <h3>Hospital list</h3>\r\n                <hr></hr>\r\n                <Row>\r\n\r\n                        {   HospitalList ? \r\n                            HospitalList.map((hospital) =>(\r\n                                <HospitalCom key={hospital} Haddress={hospital} />\r\n                            )) : null\r\n                        }\r\n                    {/* <HospitalCom />\r\n                    <HospitalCom />\r\n                    <HospitalCom /> */}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HospitalHome\r\n","F:\\New folder\\log\\src\\components\\hospitals\\HospitalCom.js",["164","165"],"import React,{useState,useEffect} from 'react';\r\nimport { Button, Card, CardBody, CardFooter, CardHeader, CardText, CardTitle, Col } from 'reactstrap';\r\nimport './HospitalCom.css'\r\nimport Hospital from '../../ethereum/hospital';\r\nimport web3 from '../../ethereum/web3'\r\n\r\n\r\nfunction HospitalCom(props) {\r\n    const { Haddress } = props;\r\n    const [Hname, setHname] = useState(\"\")\r\n    const [Hmail, setHmail] = useState(\"\")\r\n    \r\n    const [Hlocation, setHlocation] = useState(\"\")\r\n    const [Hnumber, setHnumber] = useState(\"\")\r\n\r\n    useEffect( async() => {\r\n        await window.ethereum.enable();\r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            const hospital = Hospital(Haddress); \r\n            const name = await hospital.methods.hospitalName().call({ from : accounts[0]});\r\n            setHname(name)\r\n\r\n            const email = await hospital.methods.hospitalEmail().call({ from : accounts[0]});\r\n            setHmail(email)\r\n\r\n            const location = await hospital.methods.hospitalLocation().call({ from : accounts[0]});\r\n            setHlocation(location)\r\n\r\n            const phone = await hospital.methods.hospitalPhone().call({ from : accounts[0]});\r\n            setHnumber(phone)\r\n\r\n\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Col className=\"hospitalComp\" sm={5}>\r\n            <Card>\r\n                <CardHeader tag=\"h4\">{Hname}</CardHeader>\r\n                <CardBody className=\"hospitaCard__body\">\r\n                    <div>\r\n                    <CardTitle>{Hmail}</CardTitle>\r\n                    <CardText>{Hlocation}, Contact No:: {Hnumber}</CardText>\r\n                    </div>\r\n                    <Button className=\"hospitaCard__btn\" color=\"danger\">Remove</Button>\r\n                </CardBody>\r\n                <CardFooter>{Haddress}</CardFooter>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default HospitalCom\r\n","F:\\New folder\\log\\src\\ethereum\\hospitals.js",[],"F:\\New folder\\log\\src\\ethereum\\hospital.js",["166"],"import web3 from './web3'\r\nimport Hospital from './build/Hospital.json'\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(\r\n        Hospital.abi,\r\n        address\r\n    );\r\n};\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":23,"column":19,"nodeType":"175","messageId":"176","endLine":23,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":77,"column":17,"nodeType":"179","endLine":77,"endColumn":77},{"ruleId":"173","severity":1,"message":"180","line":10,"column":25,"nodeType":"175","messageId":"176","endLine":10,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":13,"column":15,"nodeType":"183","endLine":24,"endColumn":6},{"ruleId":"181","severity":1,"message":"184","line":24,"column":8,"nodeType":"185","endLine":24,"endColumn":10,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":21,"column":22,"nodeType":"189","messageId":"190","endLine":21,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":22,"column":17,"nodeType":"193","messageId":"194","endLine":22,"endColumn":77},{"ruleId":"195","severity":1,"message":"196","line":54,"column":29,"nodeType":"179","endLine":54,"endColumn":102},{"ruleId":"195","severity":1,"message":"196","line":73,"column":21,"nodeType":"179","endLine":73,"endColumn":123},{"ruleId":"197","severity":1,"message":"198","line":4,"column":1,"nodeType":"199","endLine":9,"endColumn":3},{"ruleId":"173","severity":1,"message":"200","line":3,"column":120,"nodeType":"175","messageId":"176","endLine":3,"endColumn":129},{"ruleId":"181","severity":1,"message":"182","line":27,"column":15,"nodeType":"183","endLine":42,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":52,"column":25,"nodeType":"179","endLine":52,"endColumn":100},{"ruleId":"181","severity":1,"message":"182","line":16,"column":16,"nodeType":"183","endLine":41,"endColumn":6},{"ruleId":"181","severity":1,"message":"201","line":41,"column":8,"nodeType":"185","endLine":41,"endColumn":10,"suggestions":"202"},{"ruleId":"197","severity":1,"message":"198","line":4,"column":1,"nodeType":"199","endLine":9,"endColumn":3},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],["203"],["204"],"no-unused-vars","'admins' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","'setuserAddress' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userAddress'. Either include it or remove the dependency array.","ArrayExpression",["205"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CardTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'Haddress'. Either include it or remove the dependency array.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [userAddress]",{"range":"211","text":"212"},"Update the dependencies array to be: [Haddress]",{"range":"213","text":"214"},[772,774],"[userAddress]",[1372,1374],"[Haddress]"]